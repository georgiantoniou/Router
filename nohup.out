INFO:Target kernel configuration
INFO:  name: baseline
INFO:  config: {'pstate': False, 'c1': '2_2', 'c1e': '10_20', 'c6': True}
INFO:Current kernel configuration is not known
INFO:Configure grub
INFO:Set GRUB_DEFAULT="1>0"
INFO:Set GRUB_CMDLINE_LINUX="console=ttyS0,115200 intel_pstate=disable isolcpus=3 irqaffinity=0,1,2,4,5,6,7,8,9 rcu_nocbs=3 nohz=on"
Sourcing file `/etc/default/grub'
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-4.15.0-169-generic
Found initrd image: /boot/initrd.img-4.15.0-169-generic
Found memtest86+ image: /boot/memtest86+.elf
Found memtest86+ image: /boot/memtest86+.bin
done
INFO:Reboot machine and rerun configure to finish configuration
INFO:root:Rebooting remote host node1...
Connection to node1 closed by remote host.
INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.

--- node1-link-1 ping statistics ---
1 packets transmitted, 0 received, 100% packet loss, time 0ms

INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.
From node0-link-1 (10.10.1.1) icmp_seq=1 Destination Host Unreachable

--- node1-link-1 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms

INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.
From node0-link-1 (10.10.1.1) icmp_seq=1 Destination Host Unreachable

--- node1-link-1 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms

INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.
From node0-link-1 (10.10.1.1) icmp_seq=1 Destination Host Unreachable

--- node1-link-1 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms

INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.
From node0-link-1 (10.10.1.1) icmp_seq=1 Destination Host Unreachable

--- node1-link-1 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms

INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.
From node0-link-1 (10.10.1.1) icmp_seq=1 Destination Host Unreachable

--- node1-link-1 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms

INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.
From node0-link-1 (10.10.1.1) icmp_seq=1 Destination Host Unreachable

--- node1-link-1 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms

INFO:root:Waiting for remote host node1...
PING node1-link-1 (10.10.1.2) 56(84) bytes of data.
64 bytes from node1-link-1 (10.10.1.2): icmp_seq=1 ttl=64 time=0.291 ms

--- node1-link-1 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 0.291/0.291/0.291/0.000 ms
INFO:Target kernel configuration
INFO:  name: baseline
INFO:  config: {'pstate': False, 'c1': '2_2', 'c1e': '10_20', 'c6': True}
INFO:Current kernel configuration is not known
INFO:Configure grub
INFO:Set GRUB_DEFAULT="1>0"
INFO:Set GRUB_CMDLINE_LINUX="console=ttyS0,115200 intel_pstate=disable isolcpus=3 irqaffinity=0,1,2,4,5,6,7,8,9 rcu_nocbs=3 nohz=on"
Sourcing file `/etc/default/grub'
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-4.15.0-169-generic
Found initrd image: /boot/initrd.img-4.15.0-169-generic
Found memtest86+ image: /boot/memtest86+.elf
Found memtest86+ image: /boot/memtest86+.bin
done
INFO:Reboot machine and rerun configure to finish configuration
forceoff
Setting cpu: 0
Setting cpu: 1
Setting cpu: 2
Setting cpu: 3
Setting cpu: 4
Setting cpu: 5
Setting cpu: 6
Setting cpu: 7
Setting cpu: 8
Setting cpu: 9
Setting cpu: 10
Setting cpu: 11
Setting cpu: 12
Setting cpu: 13
Setting cpu: 14
Setting cpu: 15
Setting cpu: 16
Setting cpu: 17
Setting cpu: 18
Setting cpu: 19
0
core 0: disabled
core 1: disabled
core 2: disabled
core 3: disabled
core 4: disabled
core 5: disabled
core 6: disabled
core 7: disabled
core 8: disabled
core 9: disabled
core 10: disabled
core 11: disabled
core 12: disabled
core 13: disabled
core 14: disabled
core 15: disabled
core 16: disabled
core 17: disabled
core 18: disabled
core 19: disabled
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Install Router] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Install Router if not exists] ********************************************
ok: [node1] => {"changed": false, "dest": "/users/ganton12/", "gid": 7009, "group": "ramp-PG0", "handler": "TgzArchive", "mode": "0755", "owner": "ganton12", "size": 4096, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668890798.56-34802-74110220320230/source", "state": "directory", "uid": 20001}

TASK [Set Up Docker Curl] ******************************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/set-up-docker.sh"], "delta": "0:00:48.898619", "end": "2022-11-19 14:47:29.343443", "rc": 0, "start": "2022-11-19 14:46:40.444824", "stderr": "Warning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\n\nYou may press Ctrl+C now to abort this script.\n+ sleep 20\nWarning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\n\nYou may press Ctrl+C now to abort this script.\n+ sleep 20\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\n+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings\n+ sh -c curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg\ngpg: WARNING: unsafe ownership on homedir '/users/ganton12/.gnupg'\n+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg\n+ sh -c echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null\n+ version_gte 20.10\n+ [ -z  ]\n+ return 0\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null\n+ sh -c docker version", "stderr_lines": ["Warning: the \"docker\" command appears to already exist on this system.", "", "If you already have Docker installed, this script can cause trouble, which is", "why we're displaying this warning and provide the opportunity to cancel the", "installation.", "", "If you installed the current Docker package using this script and are using it", "again to update Docker, you can safely ignore this message.", "", "You may press Ctrl+C now to abort this script.", "+ sleep 20", "Warning: the \"docker\" command appears to already exist on this system.", "", "If you already have Docker installed, this script can cause trouble, which is", "why we're displaying this warning and provide the opportunity to cancel the", "installation.", "", "If you installed the current Docker package using this script and are using it", "again to update Docker, you can safely ignore this message.", "", "You may press Ctrl+C now to abort this script.", "+ sleep 20", "+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null", "+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings", "+ sh -c curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg", "gpg: WARNING: unsafe ownership on homedir '/users/ganton12/.gnupg'", "+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg", "+ sh -c echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list", "+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null", "+ version_gte 20.10", "+ [ -z  ]", "+ return 0", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null", "+ sh -c docker version"], "stdout": "# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f\napt-get update -qq >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\nmkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings\ncurl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg\nchmod a+r /etc/apt/keyrings/docker.gpg\necho \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list\napt-get update -qq >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null\n# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f\nClient: Docker Engine - Community\n Version:           20.10.21\n API version:       1.41\n Go version:        go1.18.7\n Git commit:        baeda1f\n Built:             Tue Oct 25 18:02:00 2022\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\n\nServer: Docker Engine - Community\n Engine:\n  Version:          20.10.21\n  API version:      1.41 (minimum version 1.12)\n  Go version:       go1.18.7\n  Git commit:       3056208\n  Built:            Tue Oct 25 17:59:53 2022\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.6.10\n  GitCommit:        770bd0108c32f3fb5c73ae1264f7e503fe7b2661\n runc:\n  Version:          1.1.4\n  GitCommit:        v1.1.4-0-g5fd4c4d\n docker-init:\n  Version:          0.19.0\n  GitCommit:        de40ad0\n\n================================================================================\n\nTo run Docker as a non-privileged user, consider setting up the\nDocker daemon in rootless mode for your user:\n\n    dockerd-rootless-setuptool.sh install\n\nVisit https://docs.docker.com/go/rootless/ to learn about rootless mode.\n\n\nTo run the Docker daemon as a fully privileged service, but granting non-root\nusers access, refer to https://docs.docker.com/go/daemon-access/\n\nWARNING: Access to the remote API on a privileged Docker daemon is equivalent\n         to root access on the host. Refer to the 'Docker daemon attack surface'\n         documentation for details: https://docs.docker.com/go/attack-surface/\n\n================================================================================", "stdout_lines": ["# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f", "apt-get update -qq >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null", "mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings", "curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg", "chmod a+r /etc/apt/keyrings/docker.gpg", "echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list", "apt-get update -qq >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null", "# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f", "Client: Docker Engine - Community", " Version:           20.10.21", " API version:       1.41", " Go version:        go1.18.7", " Git commit:        baeda1f", " Built:             Tue Oct 25 18:02:00 2022", " OS/Arch:           linux/amd64", " Context:           default", " Experimental:      true", "", "Server: Docker Engine - Community", " Engine:", "  Version:          20.10.21", "  API version:      1.41 (minimum version 1.12)", "  Go version:       go1.18.7", "  Git commit:       3056208", "  Built:            Tue Oct 25 17:59:53 2022", "  OS/Arch:          linux/amd64", "  Experimental:     false", " containerd:", "  Version:          1.6.10", "  GitCommit:        770bd0108c32f3fb5c73ae1264f7e503fe7b2661", " runc:", "  Version:          1.1.4", "  GitCommit:        v1.1.4-0-g5fd4c4d", " docker-init:", "  Version:          0.19.0", "  GitCommit:        de40ad0", "", "================================================================================", "", "To run Docker as a non-privileged user, consider setting up the", "Docker daemon in rootless mode for your user:", "", "    dockerd-rootless-setuptool.sh install", "", "Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.", "", "", "To run the Docker daemon as a fully privileged service, but granting non-root", "users access, refer to https://docs.docker.com/go/daemon-access/", "", "WARNING: Access to the remote API on a privileged Docker daemon is equivalent", "         to root access on the host. Refer to the 'Docker daemon attack surface'", "         documentation for details: https://docs.docker.com/go/attack-surface/", "", "================================================================================"]}

TASK [Make Space to Commit Image] **********************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/change-storage-location-docker.sh"], "delta": "0:00:00.380543", "end": "2022-11-19 14:47:29.968358", "rc": 0, "start": "2022-11-19 14:47:29.587815", "stderr": "Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1\": dial unix /var/run/docker.sock: connect: permission denied\n\"docker rm\" requires at least 1 argument.\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json\": dial unix /var/run/docker.sock: connect: permission denied\n\"docker rmi\" requires at least 1 argument.\nSee 'docker rmi --help'.\n\nUsage:  docker rmi [OPTIONS] IMAGE [IMAGE...]\n\nRemove one or more images\nWarning: Stopping docker.service, but it can still be activated by:\n  docker.socket\numount: /var/lib/docker: not mounted.", "stderr_lines": ["Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1\": dial unix /var/run/docker.sock: connect: permission denied", "\"docker rm\" requires at least 1 argument.", "See 'docker rm --help'.", "", "Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]", "", "Remove one or more containers", "Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json\": dial unix /var/run/docker.sock: connect: permission denied", "\"docker rmi\" requires at least 1 argument.", "See 'docker rmi --help'.", "", "Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]", "", "Remove one or more images", "Warning: Stopping docker.service, but it can still be activated by:", "  docker.socket", "umount: /var/lib/docker: not mounted."], "stdout": "", "stdout_lines": []}

PLAY [Execute Router Container] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Change to docker group] **************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": ["sudo", "newgrp", "docker"], "delta": "0:00:00.014920", "end": "2022-11-19 14:47:31.087339", "rc": 0, "start": "2022-11-19 14:47:31.072419", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Compose Up Router] *******************************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/docker-compose-up.sh"], "delta": "0:05:30.483545", "end": "2022-11-19 14:53:01.804287", "rc": 0, "start": "2022-11-19 14:47:31.320742", "stderr": "", "stderr_lines": [], "stdout": "68591eaa3a64   mklean/baseline-microsuite:hdsearch_router   \"bash\"    25 seconds ago   Up 24 seconds   0.0.0.0:11211-11214->11211-11214/tcp, :::11211-11214->11211-11214/tcp, 0.0.0.0:50050-50055->50050-50055/tcp, :::50050-50055->50050-50055/tcp, 50056-50070/tcp   microsuite-hdsearch-1", "stdout_lines": ["68591eaa3a64   mklean/baseline-microsuite:hdsearch_router   \"bash\"    25 seconds ago   Up 24 seconds   0.0.0.0:11211-11214->11211-11214/tcp, :::11211-11214->11211-11214/tcp, 0.0.0.0:50050-50055->50050-50055/tcp, :::50050-50055->50050-50055/tcp, 50056-50070/tcp   microsuite-hdsearch-1"]}

PLAY RECAP *********************************************************************
node1                      : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.004203", "end": "2022-11-19 15:01:34.973776", "rc": 0, "start": "2022-11-19 15:01:34.969573", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.003436", "end": "2022-11-19 15:01:35.242678", "rc": 0, "start": "2022-11-19 15:01:35.239242", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

PLAY [Kill remote profiler] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Get the PID of running process] ******************************************
changed: [node1] => {"changed": true, "cmd": "ps -few | grep profiler | awk '{print $2}'", "delta": "0:00:00.034722", "end": "2022-11-19 15:01:43.423839", "rc": 0, "start": "2022-11-19 15:01:43.389117", "stderr": "", "stderr_lines": [], "stdout": "6766\n6768", "stdout_lines": ["6766", "6768"]}

TASK [Kill remote profiler] ****************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
failed: [node1] (item=6766) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 6766", "delta": "0:00:00.010928", "end": "2022-11-19 15:01:43.690622", "item": "6766", "msg": "non-zero return code", "rc": 1, "start": "2022-11-19 15:01:43.679694", "stderr": "kill: (6766): No such process", "stderr_lines": ["kill: (6766): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=6768) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 6768", "delta": "0:00:00.011104", "end": "2022-11-19 15:01:43.854168", "item": "6768", "msg": "non-zero return code", "rc": 1, "start": "2022-11-19 15:01:43.843064", "stderr": "kill: (6768): No such process", "stderr_lines": ["kill: (6768): No such process"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill memcached] **********************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 sudo pkill -f memcached", "delta": "0:00:00.126670", "end": "2022-11-19 15:01:52.109857", "rc": 0, "start": "2022-11-19 15:01:51.983187", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 sudo pkill -f lookup_server", "delta": "0:00:00.102867", "end": "2022-11-19 15:01:59.384231", "rc": 0, "start": "2022-11-19 15:01:59.281364", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 sudo pkill -f mid_tier_server", "delta": "0:00:00.124491", "end": "2022-11-19 15:02:00.636144", "rc": 0, "start": "2022-11-19 15:02:00.511653", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc 68591eaa3a64:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.254219", "end": "2022-11-19 15:02:05.034691", "rc": 0, "start": "2022-11-19 15:02:04.780472", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service 68591eaa3a64 make", "delta": "0:00:06.511849", "end": "2022-11-19 15:02:14.706400", "rc": 0, "start": "2022-11-19 15:02:08.194551", "stderr": "", "stderr_lines": [], "stdout": "g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc\ng++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread", "stdout_lines": ["g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc", "g++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread"]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc 68591eaa3a64:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.279404", "end": "2022-11-19 15:02:17.161841", "rc": 0, "start": "2022-11-19 15:02:16.882437", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator 68591eaa3a64 make", "delta": "0:00:04.469802", "end": "2022-11-19 15:02:25.795592", "rc": 0, "start": "2022-11-19 15:02:21.325790", "stderr": "", "stderr_lines": [], "stdout": "g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o load_generator_open_loop.o load_generator_open_loop.cc\ng++ ../protoc_files/router.pb.o ../protoc_files/router.grpc.pb.o helper_files/loadgen_router_client_helper.o ../mid_tier_service/service/helper_files/timing.o ../mid_tier_service/service/helper_files/utils.o load_generator_open_loop.o -O3 -o load_generator_open_loop -L/usr/local/lib `pkg-config --libs grpc++ grpc` -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../", "stdout_lines": ["g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o load_generator_open_loop.o load_generator_open_loop.cc", "g++ ../protoc_files/router.pb.o ../protoc_files/router.grpc.pb.o helper_files/loadgen_router_client_helper.o ../mid_tier_service/service/helper_files/timing.o ../mid_tier_service/service/helper_files/utils.o load_generator_open_loop.o -O3 -o load_generator_open_loop -L/usr/local/lib `pkg-config --libs grpc++ grpc` -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../"]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy File] ***************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.cc 68591eaa3a64:/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.cc", "delta": "0:00:00.269735", "end": "2022-11-19 15:02:31.277652", "rc": 0, "start": "2022-11-19 15:02:31.007917", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy File] ***************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.h 68591eaa3a64:/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.h", "delta": "0:00:00.271890", "end": "2022-11-19 15:02:34.690034", "rc": 0, "start": "2022-11-19 15:02:34.418144", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator 68591eaa3a64 make", "delta": "0:00:02.043624", "end": "2022-11-19 15:02:40.861280", "msg": "non-zero return code", "rc": 2, "start": "2022-11-19 15:02:38.817656", "stderr": "helper_files/loadgen_router_client_helper.cc: In function 'LoadGenCommandLineArgs* ParseLoadGenCommandLine(const int&, char**)':\nhelper_files/loadgen_router_client_helper.cc:17:41: error: 'struct LoadGenCommandLineArgs' has no member named 'cpu'\n             load_gen_command_line_args->cpu = argv[8];\n                                         ^~~\nhelper_files/loadgen_router_client_helper.cc: In function 'void CreateQueriesFromBinFile(std::__cxx11::string, std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*)':\nhelper_files/loadgen_router_client_helper.cc:82:76: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n         if(fread(values, sizeof(long), dataset_dimensions, dataset_binary) == dataset_dimensions)\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\nmake: *** [helper_files/loadgen_router_client_helper.o] Error 1", "stderr_lines": ["helper_files/loadgen_router_client_helper.cc: In function 'LoadGenCommandLineArgs* ParseLoadGenCommandLine(const int&, char**)':", "helper_files/loadgen_router_client_helper.cc:17:41: error: 'struct LoadGenCommandLineArgs' has no member named 'cpu'", "             load_gen_command_line_args->cpu = argv[8];", "                                         ^~~", "helper_files/loadgen_router_client_helper.cc: In function 'void CreateQueriesFromBinFile(std::__cxx11::string, std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*)':", "helper_files/loadgen_router_client_helper.cc:82:76: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]", "         if(fread(values, sizeof(long), dataset_dimensions, dataset_binary) == dataset_dimensions)", "            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~", "make: *** [helper_files/loadgen_router_client_helper.o] Error 1"], "stdout": "g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o helper_files/loadgen_router_client_helper.o helper_files/loadgen_router_client_helper.cc\n<builtin>: recipe for target 'helper_files/loadgen_router_client_helper.o' failed", "stdout_lines": ["g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o helper_files/loadgen_router_client_helper.o helper_files/loadgen_router_client_helper.cc", "<builtin>: recipe for target 'helper_files/loadgen_router_client_helper.o' failed"]}
...ignoring

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 cp /etc/memcached.conf /etc/memcached_server1.conf", "delta": "0:00:00.115810", "end": "2022-11-19 15:02:44.122275", "rc": 0, "start": "2022-11-19 15:02:44.006465", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 sed 's/11211/11211/' /etc/memcached_server1.conf", "delta": "0:00:00.108427", "end": "2022-11-19 15:02:48.457783", "rc": 0, "start": "2022-11-19 15:02:48.349356", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11211", "-p 11211", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "81a7b227586982a5dda329ef346869f53a37cb85", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "f09e183ccac0b55d1cb71cb83b6b0eb9", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668891768.59-35288-111956024224714/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 68591eaa3a64:/etc/memcached_server1.conf", "delta": "0:00:00.252806", "end": "2022-11-19 15:02:49.862050", "rc": 0, "start": "2022-11-19 15:02:49.609244", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 cp /etc/memcached.conf /etc/memcached_server2.conf", "delta": "0:00:00.121844", "end": "2022-11-19 15:02:53.114577", "rc": 0, "start": "2022-11-19 15:02:52.992733", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 sed 's/11211/11212/' /etc/memcached_server2.conf", "delta": "0:00:00.124558", "end": "2022-11-19 15:02:56.406117", "rc": 0, "start": "2022-11-19 15:02:56.281559", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11212\n-p 11212\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11212", "-p 11212", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "84d193df9519e812168b88d00a4855e0e93f6f47", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "22220440373bdf924b01a710c1fec915", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668891776.53-35346-20828666290391/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 68591eaa3a64:/etc/memcached_server2.conf", "delta": "0:00:00.253733", "end": "2022-11-19 15:02:57.781896", "rc": 0, "start": "2022-11-19 15:02:57.528163", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 cp /etc/memcached.conf /etc/memcached_server3.conf", "delta": "0:00:00.120961", "end": "2022-11-19 15:03:01.090197", "rc": 0, "start": "2022-11-19 15:03:00.969236", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 sed 's/11211/11213/' /etc/memcached_server3.conf", "delta": "0:00:00.093644", "end": "2022-11-19 15:03:03.334697", "rc": 0, "start": "2022-11-19 15:03:03.241053", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11213\n-p 11213\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11213", "-p 11213", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "b06265e21a592b656d967ed56cd7251bdbd95c26", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "109b9c99f7a393a4fe480e9be9fcb6dc", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668891783.45-35405-134753105859919/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 68591eaa3a64:/etc/memcached_server3.conf", "delta": "0:00:00.264737", "end": "2022-11-19 15:03:04.693767", "rc": 0, "start": "2022-11-19 15:03:04.429030", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 cp /etc/memcached.conf /etc/memcached_server4.conf", "delta": "0:00:00.116441", "end": "2022-11-19 15:03:08.022530", "rc": 0, "start": "2022-11-19 15:03:07.906089", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 sed 's/11211/11214/' /etc/memcached_server4.conf", "delta": "0:00:00.110322", "end": "2022-11-19 15:03:11.366461", "rc": 0, "start": "2022-11-19 15:03:11.256139", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11214\n-p 11214\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11214", "-p 11214", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "3cebb9e478da18dbf6d5abf344a1227502de9199", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "d99685d582bbf110ad2a4aa98e905c01", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668891791.49-35463-271272432394426/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 68591eaa3a64:/etc/memcached_server4.conf", "delta": "0:00:00.229360", "end": "2022-11-19 15:03:12.726414", "rc": 0, "start": "2022-11-19 15:03:12.497054", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 rm /lib/systemd/system/memcached.service", "delta": "0:00:00.109946", "end": "2022-11-19 15:03:15.102950", "rc": 0, "start": "2022-11-19 15:03:14.993004", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 rm /etc/memcached.conf", "delta": "0:00:00.095427", "end": "2022-11-19 15:03:17.438093", "rc": 0, "start": "2022-11-19 15:03:17.342666", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Restart Memcached Service] ***********************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 68591eaa3a64 service memcached restart", "delta": "0:00:04.205651", "end": "2022-11-19 15:03:24.766809", "rc": 0, "start": "2022-11-19 15:03:20.561158", "stderr": "", "stderr_lines": [], "stdout": "Restarting memcached: memcached_server1.\nRestarting memcached: memcached_server2.\nRestarting memcached: memcached_server3.\nRestarting memcached: memcached_server4.", "stdout_lines": ["Restarting memcached: memcached_server1.", "Restarting memcached: memcached_server2.", "Restarting memcached: memcached_server3.", "Restarting memcached: memcached_server4."]}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "198908851324.9932", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/198908851324.9932", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "926420887003.10073", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/926420887003.10073", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "711400945211.10219", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/711400945211.10219", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "59788898209.10359", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/59788898209.10359", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt 68591eaa3a64:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.272510", "end": "2022-11-19 15:03:45.070749", "rc": 0, "start": "2022-11-19 15:03:44.798239", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (hosts). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tags). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 95, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "229625716267.10664", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/229625716267.10664", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

ssh -n node1 "cd ~/Router; sudo python3 configure.py -v --turbo=False --kernelconfig=baseline -v"
ansible-playbook -v -i hosts -e ""  ansible/install.yml
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "" --tags "kill_profiler" ansible/profiler.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64" --tags "kill_memcached" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 SOURCE_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.cc DESTINATION_FILE_PATH=/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.cc" --tags "copy_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 SOURCE_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.h DESTINATION_FILE_PATH=/MicroSuite/src/Router/load_generator/helper_files/loadgen_router_client_helper.h" --tags "copy_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MEM_CONF_NAME=memcached_server1.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 PORT_NUMBER=11211 MEM_CONF_NAME=memcached_server1.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MEM_CONF_NAME=memcached_server2.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 PORT_NUMBER=11212 MEM_CONF_NAME=memcached_server2.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MEM_CONF_NAME=memcached_server3.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 PORT_NUMBER=11213 MEM_CONF_NAME=memcached_server3.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MEM_CONF_NAME=memcached_server4.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 PORT_NUMBER=11214 MEM_CONF_NAME=memcached_server4.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MEM_CONF_NAME=/lib/systemd/system/memcached.service" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 MEM_CONF_NAME=/etc/memcached.conf" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64" --tags "restart_mem" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=4 ID=0 CORES=2" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=4 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=4 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=4 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=68591eaa3a64 BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=4 RESPONSE_THREADS=4 REPLICAS=3 CORES=3" --tags "run_midtier" ansible/router.yml
Connection to node1 closed.
Traceback (most recent call last):
  File "./run_experiment.py", line 621, in <module>
    main(sys.argv[1:])
  File "./run_experiment.py", line 618, in main
    run_multiple_experiments('/users/ganton12/data', batch_name, system_conf, client_conf, midtier_conf, bucket_conf, memcached_conf, iter)
  File "./run_experiment.py", line 555, in run_multiple_experiments
    run_single_experiment(system_conf,root_results_dir, name_prefix, instance_conf, midtier_conf, bucket_conf, memcached_conf, it)
  File "./run_experiment.py", line 465, in run_single_experiment
    with open(client_results_path_name, 'w') as fo:
FileNotFoundError: [Errno 2] No such file or directory: '/users/ganton12/data/router-singlenode-mpki/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router_warmup'
