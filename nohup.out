Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.008279", "end": "2022-11-18 04:18:05.931435", "rc": 0, "start": "2022-11-18 04:18:05.923156", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.007073", "end": "2022-11-18 04:18:06.206745", "rc": 0, "start": "2022-11-18 04:18:06.199672", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

PLAY [Kill remote profiler] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Get the PID of running process] ******************************************
changed: [node1] => {"changed": true, "cmd": "ps -few | grep profiler | awk '{print $2}'", "delta": "0:00:00.040341", "end": "2022-11-18 04:18:13.825282", "rc": 0, "start": "2022-11-18 04:18:13.784941", "stderr": "", "stderr_lines": [], "stdout": "28320\n28322", "stdout_lines": ["28320", "28322"]}

TASK [Kill remote profiler] ****************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
failed: [node1] (item=28320) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 28320", "delta": "0:00:00.023191", "end": "2022-11-18 04:18:14.106045", "item": "28320", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:18:14.082854", "stderr": "kill: (28320): No such process", "stderr_lines": ["kill: (28320): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=28322) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 28322", "delta": "0:00:00.023113", "end": "2022-11-18 04:18:14.287307", "item": "28322", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:18:14.264194", "stderr": "kill: (28322): No such process", "stderr_lines": ["kill: (28322): No such process"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill memcached] **********************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f memcached", "delta": "0:00:00.201604", "end": "2022-11-18 04:18:22.067742", "rc": 0, "start": "2022-11-18 04:18:21.866138", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.185043", "end": "2022-11-18 04:18:29.837450", "rc": 0, "start": "2022-11-18 04:18:29.652407", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.183765", "end": "2022-11-18 04:18:31.496653", "rc": 0, "start": "2022-11-18 04:18:31.312888", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc ab4cfdda97dd:/MicroSuite/src/HDSearch/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.321672", "end": "2022-11-18 04:18:49.424696", "rc": 0, "start": "2022-11-18 04:18:49.103024", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.222268", "end": "2022-11-18 04:18:52.251728", "rc": 0, "start": "2022-11-18 04:18:52.029460", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.332044", "end": "2022-11-18 04:18:55.180574", "rc": 0, "start": "2022-11-18 04:18:54.848530", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.222423", "end": "2022-11-18 04:18:58.028615", "rc": 0, "start": "2022-11-18 04:18:57.806192", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server1.conf", "delta": "0:00:00.181946", "end": "2022-11-18 04:19:00.807603", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:19:00.625657", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11211/' /etc/memcached_server1.conf", "delta": "0:00:00.186338", "end": "2022-11-18 04:19:03.665242", "rc": 0, "start": "2022-11-18 04:19:03.478904", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11211", "-p 11211", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "81a7b227586982a5dda329ef346869f53a37cb85", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "f09e183ccac0b55d1cb71cb83b6b0eb9", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766743.8-9064-186574367253701/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server1.conf", "delta": "0:00:00.333570", "end": "2022-11-18 04:19:05.144494", "rc": 0, "start": "2022-11-18 04:19:04.810924", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server2.conf", "delta": "0:00:00.185603", "end": "2022-11-18 04:19:09.001433", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:19:08.815830", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11212/' /etc/memcached_server2.conf", "delta": "0:00:00.174400", "end": "2022-11-18 04:19:11.847420", "rc": 0, "start": "2022-11-18 04:19:11.673020", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11212\n-p 11212\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11212", "-p 11212", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "84d193df9519e812168b88d00a4855e0e93f6f47", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "22220440373bdf924b01a710c1fec915", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766751.98-9123-74151302125175/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server2.conf", "delta": "0:00:00.336813", "end": "2022-11-18 04:19:13.360396", "rc": 0, "start": "2022-11-18 04:19:13.023583", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server3.conf", "delta": "0:00:00.184703", "end": "2022-11-18 04:19:16.234944", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:19:16.050241", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11213/' /etc/memcached_server3.conf", "delta": "0:00:00.172171", "end": "2022-11-18 04:19:19.021816", "rc": 0, "start": "2022-11-18 04:19:18.849645", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11213\n-p 11213\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11213", "-p 11213", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "b06265e21a592b656d967ed56cd7251bdbd95c26", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "109b9c99f7a393a4fe480e9be9fcb6dc", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766759.16-9181-78663848223827/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server3.conf", "delta": "0:00:00.309120", "end": "2022-11-18 04:19:20.476254", "rc": 0, "start": "2022-11-18 04:19:20.167134", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server4.conf", "delta": "0:00:00.177439", "end": "2022-11-18 04:19:24.303547", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:19:24.126108", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11214/' /etc/memcached_server4.conf", "delta": "0:00:00.182246", "end": "2022-11-18 04:19:27.158639", "rc": 0, "start": "2022-11-18 04:19:26.976393", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11214\n-p 11214\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11214", "-p 11214", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "3cebb9e478da18dbf6d5abf344a1227502de9199", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "d99685d582bbf110ad2a4aa98e905c01", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766767.29-9240-112028845964488/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server4.conf", "delta": "0:00:00.315474", "end": "2022-11-18 04:19:28.640184", "rc": 0, "start": "2022-11-18 04:19:28.324710", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /lib/systemd/system/memcached.service", "delta": "0:00:00.183910", "end": "2022-11-18 04:19:31.513044", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:19:31.329134", "stderr": "rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory", "stderr_lines": ["rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /etc/memcached.conf", "delta": "0:00:00.186051", "end": "2022-11-18 04:19:34.321717", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:19:34.135666", "stderr": "rm: cannot remove '/etc/memcached.conf': No such file or directory", "stderr_lines": ["rm: cannot remove '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Restart Memcached Service] ***********************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd service memcached restart", "delta": "0:00:04.361156", "end": "2022-11-18 04:19:41.357284", "rc": 0, "start": "2022-11-18 04:19:36.996128", "stderr": "start-stop-daemon: warning: failed to kill 686: No such process\nstart-stop-daemon: warning: failed to kill 701: No such process\nstart-stop-daemon: warning: failed to kill 716: No such process\nstart-stop-daemon: warning: failed to kill 731: No such process", "stderr_lines": ["start-stop-daemon: warning: failed to kill 686: No such process", "start-stop-daemon: warning: failed to kill 701: No such process", "start-stop-daemon: warning: failed to kill 716: No such process", "start-stop-daemon: warning: failed to kill 731: No such process"], "stdout": "Restarting memcached: memcached_server1.\nRestarting memcached: memcached_server2.\nRestarting memcached: memcached_server3.\nRestarting memcached: memcached_server4.", "stdout_lines": ["Restarting memcached: memcached_server1.", "Restarting memcached: memcached_server2.", "Restarting memcached: memcached_server3.", "Restarting memcached: memcached_server4."]}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "" --tags "kill_profiler" ansible/profiler.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_memcached" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server1.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11211 MEM_CONF_NAME=memcached_server1.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server2.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11212 MEM_CONF_NAME=memcached_server2.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server3.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11213 MEM_CONF_NAME=memcached_server3.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server4.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11214 MEM_CONF_NAME=memcached_server4.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/lib/systemd/system/memcached.service" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/etc/memcached.conf" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "restart_mem" ansible/memcached.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.006763", "end": "2022-11-18 04:21:42.301186", "rc": 0, "start": "2022-11-18 04:21:42.294423", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006577", "end": "2022-11-18 04:21:42.578282", "rc": 0, "start": "2022-11-18 04:21:42.571705", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

PLAY [Kill remote profiler] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Get the PID of running process] ******************************************
changed: [node1] => {"changed": true, "cmd": "ps -few | grep profiler | awk '{print $2}'", "delta": "0:00:00.040647", "end": "2022-11-18 04:21:50.194021", "rc": 0, "start": "2022-11-18 04:21:50.153374", "stderr": "", "stderr_lines": [], "stdout": "31896\n31898", "stdout_lines": ["31896", "31898"]}

TASK [Kill remote profiler] ****************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
failed: [node1] (item=31896) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 31896", "delta": "0:00:00.023143", "end": "2022-11-18 04:21:50.473219", "item": "31896", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:21:50.450076", "stderr": "kill: (31896): No such process", "stderr_lines": ["kill: (31896): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=31898) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 31898", "delta": "0:00:00.019477", "end": "2022-11-18 04:21:50.649014", "item": "31898", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:21:50.629537", "stderr": "kill: (31898): No such process", "stderr_lines": ["kill: (31898): No such process"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill memcached] **********************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f memcached", "delta": "0:00:00.196204", "end": "2022-11-18 04:21:58.456485", "rc": 0, "start": "2022-11-18 04:21:58.260281", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.223377", "end": "2022-11-18 04:22:07.244678", "rc": 0, "start": "2022-11-18 04:22:07.021301", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.179226", "end": "2022-11-18 04:22:08.903863", "rc": 0, "start": "2022-11-18 04:22:08.724637", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc ab4cfdda97dd:/MicroSuite/src/HDSearch/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.322274", "end": "2022-11-18 04:22:26.840434", "rc": 0, "start": "2022-11-18 04:22:26.518160", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.219820", "end": "2022-11-18 04:22:29.755093", "rc": 0, "start": "2022-11-18 04:22:29.535273", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.334392", "end": "2022-11-18 04:22:32.684681", "rc": 0, "start": "2022-11-18 04:22:32.350289", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.208914", "end": "2022-11-18 04:22:35.483476", "rc": 0, "start": "2022-11-18 04:22:35.274562", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server1.conf", "delta": "0:00:00.176323", "end": "2022-11-18 04:22:38.273897", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:22:38.097574", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11211/' /etc/memcached_server1.conf", "delta": "0:00:00.184410", "end": "2022-11-18 04:22:41.101103", "rc": 0, "start": "2022-11-18 04:22:40.916693", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11211", "-p 11211", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "81a7b227586982a5dda329ef346869f53a37cb85", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "f09e183ccac0b55d1cb71cb83b6b0eb9", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766961.24-9625-187625624859336/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server1.conf", "delta": "0:00:00.326395", "end": "2022-11-18 04:22:42.600568", "rc": 0, "start": "2022-11-18 04:22:42.274173", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server2.conf", "delta": "0:00:00.176525", "end": "2022-11-18 04:22:45.404551", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:22:45.228026", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11212/' /etc/memcached_server2.conf", "delta": "0:00:00.180665", "end": "2022-11-18 04:22:48.241655", "rc": 0, "start": "2022-11-18 04:22:48.060990", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11212\n-p 11212\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11212", "-p 11212", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "84d193df9519e812168b88d00a4855e0e93f6f47", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "22220440373bdf924b01a710c1fec915", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766968.38-9683-210872625168676/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server2.conf", "delta": "0:00:00.353940", "end": "2022-11-18 04:22:49.753201", "rc": 0, "start": "2022-11-18 04:22:49.399261", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server3.conf", "delta": "0:00:00.186584", "end": "2022-11-18 04:22:53.609688", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:22:53.423104", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11213/' /etc/memcached_server3.conf", "delta": "0:00:00.192534", "end": "2022-11-18 04:22:56.472608", "rc": 0, "start": "2022-11-18 04:22:56.280074", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11213\n-p 11213\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11213", "-p 11213", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "b06265e21a592b656d967ed56cd7251bdbd95c26", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "109b9c99f7a393a4fe480e9be9fcb6dc", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766976.61-9741-192150110629204/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server3.conf", "delta": "0:00:00.295022", "end": "2022-11-18 04:22:57.944460", "rc": 0, "start": "2022-11-18 04:22:57.649438", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server4.conf", "delta": "0:00:00.192072", "end": "2022-11-18 04:23:00.876777", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:23:00.684705", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11214/' /etc/memcached_server4.conf", "delta": "0:00:00.176064", "end": "2022-11-18 04:23:04.710015", "rc": 0, "start": "2022-11-18 04:23:04.533951", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11214\n-p 11214\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11214", "-p 11214", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "3cebb9e478da18dbf6d5abf344a1227502de9199", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "d99685d582bbf110ad2a4aa98e905c01", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668766984.86-9799-148238535839101/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server4.conf", "delta": "0:00:00.284171", "end": "2022-11-18 04:23:06.196255", "rc": 0, "start": "2022-11-18 04:23:05.912084", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /lib/systemd/system/memcached.service", "delta": "0:00:00.176896", "end": "2022-11-18 04:23:10.063617", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:23:09.886721", "stderr": "rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory", "stderr_lines": ["rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /etc/memcached.conf", "delta": "0:00:00.186284", "end": "2022-11-18 04:23:13.950985", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:23:13.764701", "stderr": "rm: cannot remove '/etc/memcached.conf': No such file or directory", "stderr_lines": ["rm: cannot remove '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Restart Memcached Service] ***********************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd service memcached restart", "delta": "0:00:04.358228", "end": "2022-11-18 04:23:21.987042", "rc": 0, "start": "2022-11-18 04:23:17.628814", "stderr": "start-stop-daemon: warning: failed to kill 874: No such process\nstart-stop-daemon: warning: failed to kill 889: No such process\nstart-stop-daemon: warning: failed to kill 904: No such process\nstart-stop-daemon: warning: failed to kill 919: No such process", "stderr_lines": ["start-stop-daemon: warning: failed to kill 874: No such process", "start-stop-daemon: warning: failed to kill 889: No such process", "start-stop-daemon: warning: failed to kill 904: No such process", "start-stop-daemon: warning: failed to kill 919: No such process"], "stdout": "Restarting memcached: memcached_server1.\nRestarting memcached: memcached_server2.\nRestarting memcached: memcached_server3.\nRestarting memcached: memcached_server4.", "stdout_lines": ["Restarting memcached: memcached_server1.", "Restarting memcached: memcached_server2.", "Restarting memcached: memcached_server3.", "Restarting memcached: memcached_server4."]}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "793863368440.35268", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/793863368440.35268", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "100273784282.35438", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/100273784282.35438", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "963735962815.35608", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/963735962815.35608", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "135143379553.35777", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/135143379553.35777", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.314306", "end": "2022-11-18 04:23:47.508218", "rc": 0, "start": "2022-11-18 04:23:47.193912", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "244434034381.36156", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/244434034381.36156", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "" --tags "kill_profiler" ansible/profiler.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_memcached" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server1.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11211 MEM_CONF_NAME=memcached_server1.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server2.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11212 MEM_CONF_NAME=memcached_server2.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server3.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11213 MEM_CONF_NAME=memcached_server3.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server4.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11214 MEM_CONF_NAME=memcached_server4.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/lib/systemd/system/memcached.service" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/etc/memcached.conf" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "restart_mem" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=4 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=4 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=4 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=4 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=4 RESPONSE_THREADS=4 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.007392", "end": "2022-11-18 04:24:57.580050", "rc": 0, "start": "2022-11-18 04:24:57.572658", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006237", "end": "2022-11-18 04:24:57.873914", "rc": 0, "start": "2022-11-18 04:24:57.867677", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

PLAY [Kill remote profiler] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Get the PID of running process] ******************************************
changed: [node1] => {"changed": true, "cmd": "ps -few | grep profiler | awk '{print $2}'", "delta": "0:00:00.043842", "end": "2022-11-18 04:25:05.568125", "rc": 0, "start": "2022-11-18 04:25:05.524283", "stderr": "", "stderr_lines": [], "stdout": "36572\n36574", "stdout_lines": ["36572", "36574"]}

TASK [Kill remote profiler] ****************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
failed: [node1] (item=36572) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 36572", "delta": "0:00:00.022476", "end": "2022-11-18 04:25:05.858854", "item": "36572", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:25:05.836378", "stderr": "kill: (36572): No such process", "stderr_lines": ["kill: (36572): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=36574) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 36574", "delta": "0:00:00.022367", "end": "2022-11-18 04:25:06.039611", "item": "36574", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:25:06.017244", "stderr": "kill: (36574): No such process", "stderr_lines": ["kill: (36574): No such process"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill memcached] **********************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f memcached", "delta": "0:00:00.199589", "end": "2022-11-18 04:25:14.862755", "rc": 0, "start": "2022-11-18 04:25:14.663166", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.204197", "end": "2022-11-18 04:25:23.692577", "rc": 0, "start": "2022-11-18 04:25:23.488380", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.198676", "end": "2022-11-18 04:25:25.393546", "rc": 0, "start": "2022-11-18 04:25:25.194870", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc ab4cfdda97dd:/MicroSuite/src/HDSearch/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.334502", "end": "2022-11-18 04:25:43.428152", "rc": 0, "start": "2022-11-18 04:25:43.093650", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.229335", "end": "2022-11-18 04:25:46.350226", "rc": 0, "start": "2022-11-18 04:25:46.120891", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.304253", "end": "2022-11-18 04:25:49.244300", "rc": 0, "start": "2022-11-18 04:25:48.940047", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.229546", "end": "2022-11-18 04:25:52.033249", "rc": 0, "start": "2022-11-18 04:25:51.803703", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server1.conf", "delta": "0:00:00.199218", "end": "2022-11-18 04:25:55.782836", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:25:55.583618", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11211/' /etc/memcached_server1.conf", "delta": "0:00:00.179095", "end": "2022-11-18 04:25:58.623447", "rc": 0, "start": "2022-11-18 04:25:58.444352", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11211", "-p 11211", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "81a7b227586982a5dda329ef346869f53a37cb85", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "f09e183ccac0b55d1cb71cb83b6b0eb9", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668767158.76-10370-238048915781250/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server1.conf", "delta": "0:00:00.286988", "end": "2022-11-18 04:26:00.108052", "rc": 0, "start": "2022-11-18 04:25:59.821064", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server2.conf", "delta": "0:00:00.185816", "end": "2022-11-18 04:26:04.020937", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:26:03.835121", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11212/' /etc/memcached_server2.conf", "delta": "0:00:00.190815", "end": "2022-11-18 04:26:07.924023", "rc": 0, "start": "2022-11-18 04:26:07.733208", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11212\n-p 11212\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11212", "-p 11212", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "84d193df9519e812168b88d00a4855e0e93f6f47", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "22220440373bdf924b01a710c1fec915", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668767168.07-10438-19812013515984/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server2.conf", "delta": "0:00:00.280175", "end": "2022-11-18 04:26:09.408243", "rc": 0, "start": "2022-11-18 04:26:09.128068", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server3.conf", "delta": "0:00:00.185245", "end": "2022-11-18 04:26:13.264849", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:26:13.079604", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11213/' /etc/memcached_server3.conf", "delta": "0:00:00.177236", "end": "2022-11-18 04:26:16.157465", "rc": 0, "start": "2022-11-18 04:26:15.980229", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11213\n-p 11213\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11213", "-p 11213", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "b06265e21a592b656d967ed56cd7251bdbd95c26", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "109b9c99f7a393a4fe480e9be9fcb6dc", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668767176.3-10507-131750031308946/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server3.conf", "delta": "0:00:00.313806", "end": "2022-11-18 04:26:17.652287", "rc": 0, "start": "2022-11-18 04:26:17.338481", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server4.conf", "delta": "0:00:00.191225", "end": "2022-11-18 04:26:21.523233", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:26:21.332008", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11214/' /etc/memcached_server4.conf", "delta": "0:00:00.193799", "end": "2022-11-18 04:26:25.391812", "rc": 0, "start": "2022-11-18 04:26:25.198013", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11214\n-p 11214\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11214", "-p 11214", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "3cebb9e478da18dbf6d5abf344a1227502de9199", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "d99685d582bbf110ad2a4aa98e905c01", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668767185.54-10576-229666833263082/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server4.conf", "delta": "0:00:00.292467", "end": "2022-11-18 04:26:26.888228", "rc": 0, "start": "2022-11-18 04:26:26.595761", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /lib/systemd/system/memcached.service", "delta": "0:00:00.191160", "end": "2022-11-18 04:26:29.778850", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:26:29.587690", "stderr": "rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory", "stderr_lines": ["rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /etc/memcached.conf", "delta": "0:00:00.183597", "end": "2022-11-18 04:26:33.643635", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 04:26:33.460038", "stderr": "rm: cannot remove '/etc/memcached.conf': No such file or directory", "stderr_lines": ["rm: cannot remove '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Restart Memcached Service] ***********************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd service memcached restart", "delta": "0:00:04.358576", "end": "2022-11-18 04:26:40.702059", "rc": 0, "start": "2022-11-18 04:26:36.343483", "stderr": "start-stop-daemon: warning: failed to kill 1078: No such process\nstart-stop-daemon: warning: failed to kill 1093: No such process\nstart-stop-daemon: warning: failed to kill 1108: No such process\nstart-stop-daemon: warning: failed to kill 1123: No such process", "stderr_lines": ["start-stop-daemon: warning: failed to kill 1078: No such process", "start-stop-daemon: warning: failed to kill 1093: No such process", "start-stop-daemon: warning: failed to kill 1108: No such process", "start-stop-daemon: warning: failed to kill 1123: No such process"], "stdout": "Restarting memcached: memcached_server1.\nRestarting memcached: memcached_server2.\nRestarting memcached: memcached_server3.\nRestarting memcached: memcached_server4.", "stdout_lines": ["Restarting memcached: memcached_server1.", "Restarting memcached: memcached_server2.", "Restarting memcached: memcached_server3.", "Restarting memcached: memcached_server4."]}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "827663968917.39951", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/827663968917.39951", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "219965166698.40122", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/219965166698.40122", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "785534702981.40292", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/785534702981.40292", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "409354635564.40462", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/409354635564.40462", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.292548", "end": "2022-11-18 04:27:04.312259", "rc": 0, "start": "2022-11-18 04:27:04.019711", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "148045004224.40844", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/148045004224.40844", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "" --tags "kill_profiler" ansible/profiler.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_memcached" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server1.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11211 MEM_CONF_NAME=memcached_server1.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server2.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11212 MEM_CONF_NAME=memcached_server2.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server3.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11213 MEM_CONF_NAME=memcached_server3.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server4.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11214 MEM_CONF_NAME=memcached_server4.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/lib/systemd/system/memcached.service" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/etc/memcached.conf" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "restart_mem" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=4 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=4 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=4 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=4 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=4 RESPONSE_THREADS=4 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.007847", "end": "2022-11-18 04:39:07.646041", "rc": 0, "start": "2022-11-18 04:39:07.638194", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006672", "end": "2022-11-18 04:39:07.929414", "rc": 0, "start": "2022-11-18 04:39:07.922742", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.215400", "end": "2022-11-18 04:39:21.696325", "rc": 0, "start": "2022-11-18 04:39:21.480925", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.201402", "end": "2022-11-18 04:39:23.348987", "rc": 0, "start": "2022-11-18 04:39:23.147585", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/HDSearch/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.343740", "end": "2022-11-18 04:39:26.260697", "rc": 0, "start": "2022-11-18 04:39:25.916957", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.222999", "end": "2022-11-18 04:39:29.095469", "rc": 0, "start": "2022-11-18 04:39:28.872470", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.345188", "end": "2022-11-18 04:39:33.032337", "rc": 0, "start": "2022-11-18 04:39:32.687149", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.229952", "end": "2022-11-18 04:39:35.938102", "rc": 0, "start": "2022-11-18 04:39:35.708150", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "291203205753.2011", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/291203205753.2011", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "955387960537.2179", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/955387960537.2179", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "833697156972.2345", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/833697156972.2345", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "39971666999.2513", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/39971666999.2513", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.282031", "end": "2022-11-18 04:40:03.488191", "rc": 0, "start": "2022-11-18 04:40:03.206160", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "91001962789.2890", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/91001962789.2890", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "608898569655.3068", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/608898569655.3068", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
INFO:root:python3 ./profiler.py -n node1 stop
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.008226", "end": "2022-11-18 04:48:50.430915", "rc": 0, "start": "2022-11-18 04:48:50.422689", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.007066", "end": "2022-11-18 04:48:50.701080", "rc": 0, "start": "2022-11-18 04:48:50.694014", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.205770", "end": "2022-11-18 04:49:03.485178", "rc": 0, "start": "2022-11-18 04:49:03.279408", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.187476", "end": "2022-11-18 04:49:05.140909", "rc": 0, "start": "2022-11-18 04:49:04.953433", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.314708", "end": "2022-11-18 04:49:08.044774", "rc": 0, "start": "2022-11-18 04:49:07.730066", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:05.390133", "end": "2022-11-18 04:49:16.051787", "rc": 0, "start": "2022-11-18 04:49:10.661654", "stderr": "", "stderr_lines": [], "stdout": "g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc\ng++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread", "stdout_lines": ["g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc", "g++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread"]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.352699", "end": "2022-11-18 04:49:19.000667", "rc": 0, "start": "2022-11-18 04:49:18.647968", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.219252", "end": "2022-11-18 04:49:22.827908", "rc": 0, "start": "2022-11-18 04:49:22.608656", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "865163266234.4774", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/865163266234.4774", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "778824661546.4941", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/778824661546.4941", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "330867931492.5109", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/330867931492.5109", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "932483070800.5275", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/932483070800.5275", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.309518", "end": "2022-11-18 04:49:46.288498", "rc": 0, "start": "2022-11-18 04:49:45.978980", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "414315277319.5639", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/414315277319.5639", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "664964502782.5804", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/664964502782.5804", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
INFO:root:python3 ./profiler.py -n node1 stop
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
Connection to node1 closed.
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.008274", "end": "2022-11-18 04:55:43.308834", "rc": 0, "start": "2022-11-18 04:55:43.300560", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.007108", "end": "2022-11-18 04:55:43.578812", "rc": 0, "start": "2022-11-18 04:55:43.571704", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.221690", "end": "2022-11-18 04:55:56.382606", "rc": 0, "start": "2022-11-18 04:55:56.160916", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.192279", "end": "2022-11-18 04:55:58.055811", "rc": 0, "start": "2022-11-18 04:55:57.863532", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.288052", "end": "2022-11-18 04:56:00.896591", "rc": 0, "start": "2022-11-18 04:56:00.608539", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.228643", "end": "2022-11-18 04:56:03.710976", "rc": 0, "start": "2022-11-18 04:56:03.482333", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.307599", "end": "2022-11-18 04:56:07.628082", "rc": 0, "start": "2022-11-18 04:56:07.320483", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.230878", "end": "2022-11-18 04:56:11.431519", "rc": 0, "start": "2022-11-18 04:56:11.200641", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "725791042450.7399", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/725791042450.7399", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "533860767426.7565", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/533860767426.7565", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "748828226833.7732", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/748828226833.7732", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "108386386006.7899", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/108386386006.7899", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.319091", "end": "2022-11-18 04:56:35.728898", "rc": 0, "start": "2022-11-18 04:56:35.409807", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "570177596990.8272", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/570177596990.8272", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "496729754847.8441", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/496729754847.8441", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
INFO:root:python3 ./profiler.py -n node1 stop
Connection to node1 closed.
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.007926", "end": "2022-11-18 05:03:06.383185", "rc": 0, "start": "2022-11-18 05:03:06.375259", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006678", "end": "2022-11-18 05:03:06.664290", "rc": 0, "start": "2022-11-18 05:03:06.657612", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.212517", "end": "2022-11-18 05:03:19.482873", "rc": 0, "start": "2022-11-18 05:03:19.270356", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.184883", "end": "2022-11-18 05:03:21.156678", "rc": 0, "start": "2022-11-18 05:03:20.971795", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.321754", "end": "2022-11-18 05:03:24.040851", "rc": 0, "start": "2022-11-18 05:03:23.719097", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.222337", "end": "2022-11-18 05:03:26.850823", "rc": 0, "start": "2022-11-18 05:03:26.628486", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.330847", "end": "2022-11-18 05:03:29.792759", "rc": 0, "start": "2022-11-18 05:03:29.461912", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.225602", "end": "2022-11-18 05:03:34.614300", "rc": 0, "start": "2022-11-18 05:03:34.388698", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "292596200894.24508", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/292596200894.24508", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "368718084591.24677", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/368718084591.24677", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "250543126545.24844", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/250543126545.24844", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "578529930501.25011", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/578529930501.25011", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.343567", "end": "2022-11-18 05:03:58.936153", "rc": 0, "start": "2022-11-18 05:03:58.592586", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "575257063535.25378", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/575257063535.25378", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "61766090026.25547", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/61766090026.25547", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
INFO:root:python3 ./profiler.py -n node1 stop
Connection to node1 closed.
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.008223", "end": "2022-11-18 05:11:07.466562", "rc": 0, "start": "2022-11-18 05:11:07.458339", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.007025", "end": "2022-11-18 05:11:07.760297", "rc": 0, "start": "2022-11-18 05:11:07.753272", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.204625", "end": "2022-11-18 05:11:20.543090", "rc": 0, "start": "2022-11-18 05:11:20.338465", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.189895", "end": "2022-11-18 05:11:22.209238", "rc": 0, "start": "2022-11-18 05:11:22.019343", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.401021", "end": "2022-11-18 05:11:25.196857", "rc": 0, "start": "2022-11-18 05:11:24.795836", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.222838", "end": "2022-11-18 05:11:28.016716", "rc": 0, "start": "2022-11-18 05:11:27.793878", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.302597", "end": "2022-11-18 05:11:30.912710", "rc": 0, "start": "2022-11-18 05:11:30.610113", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.221471", "end": "2022-11-18 05:11:33.759214", "rc": 0, "start": "2022-11-18 05:11:33.537743", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "329323687492.3518", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/329323687492.3518", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "597404551988.3684", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/597404551988.3684", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "554985508058.3849", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/554985508058.3849", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "154290737958.4015", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/154290737958.4015", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.312673", "end": "2022-11-18 05:11:58.152176", "rc": 0, "start": "2022-11-18 05:11:57.839503", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "794779053625.4387", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/794779053625.4387", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "286705511994.4557", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/286705511994.4557", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
Connection to node1 closed.
INFO:root:python3 ./profiler.py -n node1 stop
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.008221", "end": "2022-11-18 05:18:17.289282", "rc": 0, "start": "2022-11-18 05:18:17.281061", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006509", "end": "2022-11-18 05:18:17.566839", "rc": 0, "start": "2022-11-18 05:18:17.560330", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.223403", "end": "2022-11-18 05:18:30.352008", "rc": 0, "start": "2022-11-18 05:18:30.128605", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.189224", "end": "2022-11-18 05:18:32.042342", "rc": 0, "start": "2022-11-18 05:18:31.853118", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.340181", "end": "2022-11-18 05:18:34.956734", "rc": 0, "start": "2022-11-18 05:18:34.616553", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.232901", "end": "2022-11-18 05:18:37.796300", "rc": 0, "start": "2022-11-18 05:18:37.563399", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.320761", "end": "2022-11-18 05:18:40.724702", "rc": 0, "start": "2022-11-18 05:18:40.403941", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.226135", "end": "2022-11-18 05:18:43.565918", "rc": 0, "start": "2022-11-18 05:18:43.339783", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "962142851333.20343", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/962142851333.20343", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "342416433206.20521", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/342416433206.20521", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "856230958195.20692", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/856230958195.20692", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "534480624620.20859", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/534480624620.20859", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.321337", "end": "2022-11-18 05:19:04.916268", "rc": 0, "start": "2022-11-18 05:19:04.594931", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "173745922523.21404", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/173745922523.21404", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "232443533468.21582", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/232443533468.21582", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
Connection to node1 closed.
INFO:root:python3 ./profiler.py -n node1 stop
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.007883", "end": "2022-11-18 05:25:13.065917", "rc": 0, "start": "2022-11-18 05:25:13.058034", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006595", "end": "2022-11-18 05:25:13.352837", "rc": 0, "start": "2022-11-18 05:25:13.346242", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.226245", "end": "2022-11-18 05:25:26.174292", "rc": 0, "start": "2022-11-18 05:25:25.948047", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.199541", "end": "2022-11-18 05:25:27.859687", "rc": 0, "start": "2022-11-18 05:25:27.660146", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.305658", "end": "2022-11-18 05:25:31.732214", "rc": 0, "start": "2022-11-18 05:25:31.426556", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.234652", "end": "2022-11-18 05:25:34.595478", "rc": 0, "start": "2022-11-18 05:25:34.360826", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.316785", "end": "2022-11-18 05:25:37.548343", "rc": 0, "start": "2022-11-18 05:25:37.231558", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.216414", "end": "2022-11-18 05:25:40.382464", "rc": 0, "start": "2022-11-18 05:25:40.166050", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "993251035668.37202", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/993251035668.37202", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "252685317620.37370", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/252685317620.37370", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "84188725725.37538", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/84188725725.37538", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "986802157257.37704", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/986802157257.37704", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.301818", "end": "2022-11-18 05:26:03.820026", "rc": 0, "start": "2022-11-18 05:26:03.518208", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "69521765175.38069", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/69521765175.38069", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "503213425221.38241", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/503213425221.38241", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
Connection to node1 closed.
INFO:root:python3 ./profiler.py -n node1 stop
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.007990", "end": "2022-11-18 05:36:46.203503", "rc": 0, "start": "2022-11-18 05:36:46.195513", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006515", "end": "2022-11-18 05:36:46.492634", "rc": 0, "start": "2022-11-18 05:36:46.486119", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

PLAY [Kill remote profiler] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Get the PID of running process] ******************************************
changed: [node1] => {"changed": true, "cmd": "ps -few | grep profiler | awk '{print $2}'", "delta": "0:00:00.044768", "end": "2022-11-18 05:36:54.129020", "rc": 0, "start": "2022-11-18 05:36:54.084252", "stderr": "", "stderr_lines": [], "stdout": "2464\n2466\n3075\n3076", "stdout_lines": ["2464", "2466", "3075", "3076"]}

TASK [Kill remote profiler] ****************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
failed: [node1] (item=2464) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 2464", "delta": "0:00:00.021438", "end": "2022-11-18 05:36:54.407503", "item": "2464", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:36:54.386065", "stderr": "kill: (2464): No such process", "stderr_lines": ["kill: (2464): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=2466) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 2466", "delta": "0:00:00.022537", "end": "2022-11-18 05:36:54.597772", "item": "2466", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:36:54.575235", "stderr": "kill: (2466): No such process", "stderr_lines": ["kill: (2466): No such process"], "stdout": "", "stdout_lines": []}
changed: [node1] => (item=3075) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 3075", "delta": "0:00:00.022383", "end": "2022-11-18 05:36:54.781740", "item": "3075", "rc": 0, "start": "2022-11-18 05:36:54.759357", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": [], "warnings": ["Consider using 'become', 'become_method', and 'become_user' rather than running sudo"]}
failed: [node1] (item=3076) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 3076", "delta": "0:00:00.020946", "end": "2022-11-18 05:36:54.971672", "item": "3076", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:36:54.950726", "stderr": "kill: (3076): No such process", "stderr_lines": ["kill: (3076): No such process"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill memcached] **********************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f memcached", "delta": "0:00:00.198294", "end": "2022-11-18 05:37:03.782342", "rc": 0, "start": "2022-11-18 05:37:03.584048", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.206920", "end": "2022-11-18 05:37:12.555493", "rc": 0, "start": "2022-11-18 05:37:12.348573", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.202578", "end": "2022-11-18 05:37:14.236521", "rc": 0, "start": "2022-11-18 05:37:14.033943", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server1.conf", "delta": "0:00:00.186182", "end": "2022-11-18 05:37:17.054629", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:37:16.868447", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11211/' /etc/memcached_server1.conf", "delta": "0:00:00.164800", "end": "2022-11-18 05:37:19.842311", "rc": 0, "start": "2022-11-18 05:37:19.677511", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11211", "-p 11211", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "81a7b227586982a5dda329ef346869f53a37cb85", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "f09e183ccac0b55d1cb71cb83b6b0eb9", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668771439.98-14432-280021491860800/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server1.conf", "delta": "0:00:00.297114", "end": "2022-11-18 05:37:21.292330", "rc": 0, "start": "2022-11-18 05:37:20.995216", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server2.conf", "delta": "0:00:00.175172", "end": "2022-11-18 05:37:24.152774", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:37:23.977602", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11212/' /etc/memcached_server2.conf", "delta": "0:00:00.183941", "end": "2022-11-18 05:37:28.011264", "rc": 0, "start": "2022-11-18 05:37:27.827323", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11212\n-p 11212\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11212", "-p 11212", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "84d193df9519e812168b88d00a4855e0e93f6f47", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "22220440373bdf924b01a710c1fec915", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668771448.16-14490-22275225029568/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server2.conf", "delta": "0:00:00.286434", "end": "2022-11-18 05:37:29.496214", "rc": 0, "start": "2022-11-18 05:37:29.209780", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server3.conf", "delta": "0:00:00.185029", "end": "2022-11-18 05:37:33.289749", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:37:33.104720", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11213/' /etc/memcached_server3.conf", "delta": "0:00:00.188311", "end": "2022-11-18 05:37:37.178834", "rc": 0, "start": "2022-11-18 05:37:36.990523", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11213\n-p 11213\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11213", "-p 11213", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "b06265e21a592b656d967ed56cd7251bdbd95c26", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "109b9c99f7a393a4fe480e9be9fcb6dc", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668771457.33-14549-189194031730971/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server3.conf", "delta": "0:00:00.284008", "end": "2022-11-18 05:37:38.680149", "rc": 0, "start": "2022-11-18 05:37:38.396141", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd cp /etc/memcached.conf /etc/memcached_server4.conf", "delta": "0:00:00.180670", "end": "2022-11-18 05:37:41.554223", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:37:41.373553", "stderr": "cp: cannot stat '/etc/memcached.conf': No such file or directory", "stderr_lines": ["cp: cannot stat '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sed 's/11211/11214/' /etc/memcached_server4.conf", "delta": "0:00:00.192780", "end": "2022-11-18 05:37:44.359376", "rc": 0, "start": "2022-11-18 05:37:44.166596", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11214\n-p 11214\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11214", "-p 11214", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "3cebb9e478da18dbf6d5abf344a1227502de9199", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "d99685d582bbf110ad2a4aa98e905c01", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668771464.5-14607-42832114476277/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt ab4cfdda97dd:/etc/memcached_server4.conf", "delta": "0:00:00.286344", "end": "2022-11-18 05:37:45.828205", "rc": 0, "start": "2022-11-18 05:37:45.541861", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /lib/systemd/system/memcached.service", "delta": "0:00:00.178779", "end": "2022-11-18 05:37:48.701524", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:37:48.522745", "stderr": "rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory", "stderr_lines": ["rm: cannot remove '/lib/systemd/system/memcached.service': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
fatal: [node1]: FAILED! => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd rm /etc/memcached.conf", "delta": "0:00:00.184803", "end": "2022-11-18 05:37:51.563006", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 05:37:51.378203", "stderr": "rm: cannot remove '/etc/memcached.conf': No such file or directory", "stderr_lines": ["rm: cannot remove '/etc/memcached.conf': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Restart Memcached Service] ***********************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd service memcached restart", "delta": "0:00:04.363921", "end": "2022-11-18 05:37:59.595430", "rc": 0, "start": "2022-11-18 05:37:55.231509", "stderr": "start-stop-daemon: warning: failed to kill 1343: No such process\nstart-stop-daemon: warning: failed to kill 1358: No such process\nstart-stop-daemon: warning: failed to kill 1373: No such process\nstart-stop-daemon: warning: failed to kill 1388: No such process", "stderr_lines": ["start-stop-daemon: warning: failed to kill 1343: No such process", "start-stop-daemon: warning: failed to kill 1358: No such process", "start-stop-daemon: warning: failed to kill 1373: No such process", "start-stop-daemon: warning: failed to kill 1388: No such process"], "stdout": "Restarting memcached: memcached_server1.\nRestarting memcached: memcached_server2.\nRestarting memcached: memcached_server3.\nRestarting memcached: memcached_server4.", "stdout_lines": ["Restarting memcached: memcached_server1.", "Restarting memcached: memcached_server2.", "Restarting memcached: memcached_server3.", "Restarting memcached: memcached_server4."]}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f lookup_server", "delta": "0:00:00.191185", "end": "2022-11-18 05:38:07.487778", "rc": 0, "start": "2022-11-18 05:38:07.296593", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec ab4cfdda97dd sudo pkill -f mid_tier_server", "delta": "0:00:00.187130", "end": "2022-11-18 05:38:10.158234", "rc": 0, "start": "2022-11-18 05:38:09.971104", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.308777", "end": "2022-11-18 05:38:14.116310", "rc": 0, "start": "2022-11-18 05:38:13.807533", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service ab4cfdda97dd make", "delta": "0:00:00.228191", "end": "2022-11-18 05:38:18.021425", "rc": 0, "start": "2022-11-18 05:38:17.793234", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc ab4cfdda97dd:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.309341", "end": "2022-11-18 05:38:21.112315", "rc": 0, "start": "2022-11-18 05:38:20.802974", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator ab4cfdda97dd make", "delta": "0:00:00.224749", "end": "2022-11-18 05:38:24.980549", "rc": 0, "start": "2022-11-18 05:38:24.755800", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "958297806662.6256", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/958297806662.6256", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "43823512385.6423", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/43823512385.6423", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "834395391944.6589", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/834395391944.6589", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "189777527497.6758", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/189777527497.6758", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt ab4cfdda97dd:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.297344", "end": "2022-11-18 05:38:49.288085", "rc": 0, "start": "2022-11-18 05:38:48.990741", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "188587708702.7125", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/188587708702.7125", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "748341588594.7293", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/748341588594.7293", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
Connection to node1 closed.
INFO:root:python3 ./profiler.py -n node1 stop
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "" --tags "kill_profiler" ansible/profiler.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_memcached" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server1.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11211 MEM_CONF_NAME=memcached_server1.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server2.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11212 MEM_CONF_NAME=memcached_server2.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server3.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11213 MEM_CONF_NAME=memcached_server3.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=memcached_server4.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd PORT_NUMBER=11214 MEM_CONF_NAME=memcached_server4.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/lib/systemd/system/memcached.service" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MEM_CONF_NAME=/etc/memcached.conf" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "restart_mem" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=ab4cfdda97dd BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Install Router] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Install Router if not exists] ********************************************
ok: [node1] => {"changed": false, "dest": "/users/ganton12/", "gid": 7009, "group": "ramp-PG0", "handler": "TgzArchive", "mode": "0755", "owner": "ganton12", "size": 4096, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668772191.68-15135-205059086742933/source", "state": "directory", "uid": 20001}

TASK [Set Up Docker Curl] ******************************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/set-up-docker.sh"], "delta": "0:00:49.426401", "end": "2022-11-18 05:50:42.861812", "rc": 0, "start": "2022-11-18 05:49:53.435411", "stderr": "Warning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\n\nYou may press Ctrl+C now to abort this script.\n+ sleep 20\nWarning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\n\nYou may press Ctrl+C now to abort this script.\n+ sleep 20\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\n+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings\n+ sh -c curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg\ngpg: WARNING: unsafe ownership on homedir '/users/ganton12/.gnupg'\n+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg\n+ sh -c echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null\n+ version_gte 20.10\n+ [ -z  ]\n+ return 0\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null\n+ sh -c docker version", "stderr_lines": ["Warning: the \"docker\" command appears to already exist on this system.", "", "If you already have Docker installed, this script can cause trouble, which is", "why we're displaying this warning and provide the opportunity to cancel the", "installation.", "", "If you installed the current Docker package using this script and are using it", "again to update Docker, you can safely ignore this message.", "", "You may press Ctrl+C now to abort this script.", "+ sleep 20", "Warning: the \"docker\" command appears to already exist on this system.", "", "If you already have Docker installed, this script can cause trouble, which is", "why we're displaying this warning and provide the opportunity to cancel the", "installation.", "", "If you installed the current Docker package using this script and are using it", "again to update Docker, you can safely ignore this message.", "", "You may press Ctrl+C now to abort this script.", "+ sleep 20", "+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null", "+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings", "+ sh -c curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg", "gpg: WARNING: unsafe ownership on homedir '/users/ganton12/.gnupg'", "+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg", "+ sh -c echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list", "+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null", "+ version_gte 20.10", "+ [ -z  ]", "+ return 0", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null", "+ sh -c docker version"], "stdout": "# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f\napt-get update -qq >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\nmkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings\ncurl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg\nchmod a+r /etc/apt/keyrings/docker.gpg\necho \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list\napt-get update -qq >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null\n# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f\nClient: Docker Engine - Community\n Version:           20.10.21\n API version:       1.41\n Go version:        go1.18.7\n Git commit:        baeda1f\n Built:             Tue Oct 25 18:02:00 2022\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\n\nServer: Docker Engine - Community\n Engine:\n  Version:          20.10.21\n  API version:      1.41 (minimum version 1.12)\n  Go version:       go1.18.7\n  Git commit:       3056208\n  Built:            Tue Oct 25 17:59:53 2022\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.6.10\n  GitCommit:        770bd0108c32f3fb5c73ae1264f7e503fe7b2661\n runc:\n  Version:          1.1.4\n  GitCommit:        v1.1.4-0-g5fd4c4d\n docker-init:\n  Version:          0.19.0\n  GitCommit:        de40ad0\n\n================================================================================\n\nTo run Docker as a non-privileged user, consider setting up the\nDocker daemon in rootless mode for your user:\n\n    dockerd-rootless-setuptool.sh install\n\nVisit https://docs.docker.com/go/rootless/ to learn about rootless mode.\n\n\nTo run the Docker daemon as a fully privileged service, but granting non-root\nusers access, refer to https://docs.docker.com/go/daemon-access/\n\nWARNING: Access to the remote API on a privileged Docker daemon is equivalent\n         to root access on the host. Refer to the 'Docker daemon attack surface'\n         documentation for details: https://docs.docker.com/go/attack-surface/\n\n================================================================================", "stdout_lines": ["# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f", "apt-get update -qq >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null", "mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings", "curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg", "chmod a+r /etc/apt/keyrings/docker.gpg", "echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list", "apt-get update -qq >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null", "# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f", "Client: Docker Engine - Community", " Version:           20.10.21", " API version:       1.41", " Go version:        go1.18.7", " Git commit:        baeda1f", " Built:             Tue Oct 25 18:02:00 2022", " OS/Arch:           linux/amd64", " Context:           default", " Experimental:      true", "", "Server: Docker Engine - Community", " Engine:", "  Version:          20.10.21", "  API version:      1.41 (minimum version 1.12)", "  Go version:       go1.18.7", "  Git commit:       3056208", "  Built:            Tue Oct 25 17:59:53 2022", "  OS/Arch:          linux/amd64", "  Experimental:     false", " containerd:", "  Version:          1.6.10", "  GitCommit:        770bd0108c32f3fb5c73ae1264f7e503fe7b2661", " runc:", "  Version:          1.1.4", "  GitCommit:        v1.1.4-0-g5fd4c4d", " docker-init:", "  Version:          0.19.0", "  GitCommit:        de40ad0", "", "================================================================================", "", "To run Docker as a non-privileged user, consider setting up the", "Docker daemon in rootless mode for your user:", "", "    dockerd-rootless-setuptool.sh install", "", "Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.", "", "", "To run the Docker daemon as a fully privileged service, but granting non-root", "users access, refer to https://docs.docker.com/go/daemon-access/", "", "WARNING: Access to the remote API on a privileged Docker daemon is equivalent", "         to root access on the host. Refer to the 'Docker daemon attack surface'", "         documentation for details: https://docs.docker.com/go/attack-surface/", "", "================================================================================"]}

TASK [Make Space to Commit Image] **********************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/change-storage-location-docker.sh"], "delta": "0:00:04.770253", "end": "2022-11-18 05:50:47.887303", "rc": 0, "start": "2022-11-18 05:50:43.117050", "stderr": "Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1\": dial unix /var/run/docker.sock: connect: permission denied\n\"docker rm\" requires at least 1 argument.\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json\": dial unix /var/run/docker.sock: connect: permission denied\n\"docker rmi\" requires at least 1 argument.\nSee 'docker rmi --help'.\n\nUsage:  docker rmi [OPTIONS] IMAGE [IMAGE...]\n\nRemove one or more images\nWarning: Stopping docker.service, but it can still be activated by:\n  docker.socket\numount: /var/lib/docker: umount failed: Operation not permitted.\nrm: cannot remove '/var/lib/docker': Device or resource busy\nmkdir: cannot create directory ‘/var/lib/docker’: File exists\nmkdir: cannot create directory ‘/dev/mkdocker’: File exists", "stderr_lines": ["Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1\": dial unix /var/run/docker.sock: connect: permission denied", "\"docker rm\" requires at least 1 argument.", "See 'docker rm --help'.", "", "Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]", "", "Remove one or more containers", "Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json\": dial unix /var/run/docker.sock: connect: permission denied", "\"docker rmi\" requires at least 1 argument.", "See 'docker rmi --help'.", "", "Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]", "", "Remove one or more images", "Warning: Stopping docker.service, but it can still be activated by:", "  docker.socket", "umount: /var/lib/docker: umount failed: Operation not permitted.", "rm: cannot remove '/var/lib/docker': Device or resource busy", "mkdir: cannot create directory ‘/var/lib/docker’: File exists", "mkdir: cannot create directory ‘/dev/mkdocker’: File exists"], "stdout": "", "stdout_lines": []}

PLAY [Execute Router Container] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Change to docker group] **************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": ["sudo", "newgrp", "docker"], "delta": "0:00:00.027052", "end": "2022-11-18 05:50:49.450206", "rc": 0, "start": "2022-11-18 05:50:49.423154", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Compose Up Router] *******************************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/docker-compose-up.sh"], "delta": "0:10:01.196934", "end": "2022-11-18 06:00:50.894230", "rc": 0, "start": "2022-11-18 05:50:49.697296", "stderr": "", "stderr_lines": [], "stdout": "2303271d2cc3   mklean/baseline-microsuite:hdsearch_router   \"bash\"    4 seconds ago   Up 3 seconds   0.0.0.0:11211-11214->11211-11214/tcp, :::11211-11214->11211-11214/tcp, 0.0.0.0:50050-50055->50050-50055/tcp, :::50050-50055->50050-50055/tcp, 50056-50070/tcp   microsuite-hdsearch-1", "stdout_lines": ["2303271d2cc3   mklean/baseline-microsuite:hdsearch_router   \"bash\"    4 seconds ago   Up 3 seconds   0.0.0.0:11211-11214->11211-11214/tcp, :::11211-11214->11211-11214/tcp, 0.0.0.0:50050-50055->50050-50055/tcp, :::50050-50055->50050-50055/tcp, 50056-50070/tcp   microsuite-hdsearch-1"]}

PLAY RECAP *********************************************************************
node1                      : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.007902", "end": "2022-11-18 06:01:03.672200", "rc": 0, "start": "2022-11-18 06:01:03.664298", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006705", "end": "2022-11-18 06:01:03.964834", "rc": 0, "start": "2022-11-18 06:01:03.958129", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

PLAY [Kill remote profiler] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Get the PID of running process] ******************************************
changed: [node1] => {"changed": true, "cmd": "ps -few | grep profiler | awk '{print $2}'", "delta": "0:00:00.040791", "end": "2022-11-18 06:01:12.652629", "rc": 0, "start": "2022-11-18 06:01:12.611838", "stderr": "", "stderr_lines": [], "stdout": "7300\n7301\n10630\n10632", "stdout_lines": ["7300", "7301", "10630", "10632"]}

TASK [Kill remote profiler] ****************************************************
changed: [node1] => (item=7300) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 7300", "delta": "0:00:00.022760", "end": "2022-11-18 06:01:12.945572", "item": "7300", "rc": 0, "start": "2022-11-18 06:01:12.922812", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": [], "warnings": ["Consider using 'become', 'become_method', and 'become_user' rather than running sudo"]}
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
failed: [node1] (item=7301) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 7301", "delta": "0:00:00.022668", "end": "2022-11-18 06:01:13.139662", "item": "7301", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 06:01:13.116994", "stderr": "kill: (7301): No such process", "stderr_lines": ["kill: (7301): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=10630) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 10630", "delta": "0:00:00.022596", "end": "2022-11-18 06:01:13.322600", "item": "10630", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 06:01:13.300004", "stderr": "kill: (10630): No such process", "stderr_lines": ["kill: (10630): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=10632) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 10632", "delta": "0:00:00.022376", "end": "2022-11-18 06:01:13.509656", "item": "10632", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 06:01:13.487280", "stderr": "kill: (10632): No such process", "stderr_lines": ["kill: (10632): No such process"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill memcached] **********************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sudo pkill -f memcached", "delta": "0:00:00.190405", "end": "2022-11-18 06:01:21.360652", "rc": 0, "start": "2022-11-18 06:01:21.170247", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sudo pkill -f lookup_server", "delta": "0:00:00.195092", "end": "2022-11-18 06:01:29.293526", "rc": 0, "start": "2022-11-18 06:01:29.098434", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sudo pkill -f mid_tier_server", "delta": "0:00:00.199304", "end": "2022-11-18 06:01:31.026375", "rc": 0, "start": "2022-11-18 06:01:30.827071", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc 2303271d2cc3:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.319772", "end": "2022-11-18 06:01:34.028125", "rc": 0, "start": "2022-11-18 06:01:33.708353", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service 2303271d2cc3 make", "delta": "0:00:06.161432", "end": "2022-11-18 06:01:43.938464", "rc": 0, "start": "2022-11-18 06:01:37.777032", "stderr": "", "stderr_lines": [], "stdout": "g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc\ng++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread", "stdout_lines": ["g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc", "g++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread"]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc 2303271d2cc3:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.272162", "end": "2022-11-18 06:01:46.992353", "rc": 0, "start": "2022-11-18 06:01:46.720191", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator 2303271d2cc3 make", "delta": "0:00:04.288383", "end": "2022-11-18 06:01:54.052224", "rc": 0, "start": "2022-11-18 06:01:49.763841", "stderr": "", "stderr_lines": [], "stdout": "g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o load_generator_open_loop.o load_generator_open_loop.cc\ng++ ../protoc_files/router.pb.o ../protoc_files/router.grpc.pb.o helper_files/loadgen_router_client_helper.o ../mid_tier_service/service/helper_files/timing.o ../mid_tier_service/service/helper_files/utils.o load_generator_open_loop.o -O3 -o load_generator_open_loop -L/usr/local/lib `pkg-config --libs grpc++ grpc` -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../", "stdout_lines": ["g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o load_generator_open_loop.o load_generator_open_loop.cc", "g++ ../protoc_files/router.pb.o ../protoc_files/router.grpc.pb.o helper_files/loadgen_router_client_helper.o ../mid_tier_service/service/helper_files/timing.o ../mid_tier_service/service/helper_files/utils.o load_generator_open_loop.o -O3 -o load_generator_open_loop -L/usr/local/lib `pkg-config --libs grpc++ grpc` -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../"]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 cp /etc/memcached.conf /etc/memcached_server1.conf", "delta": "0:00:00.190349", "end": "2022-11-18 06:01:57.978111", "rc": 0, "start": "2022-11-18 06:01:57.787762", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sed 's/11211/11211/' /etc/memcached_server1.conf", "delta": "0:00:00.184709", "end": "2022-11-18 06:02:00.892312", "rc": 0, "start": "2022-11-18 06:02:00.707603", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11211", "-p 11211", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "81a7b227586982a5dda329ef346869f53a37cb85", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "f09e183ccac0b55d1cb71cb83b6b0eb9", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668772921.03-15455-111011052581577/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 2303271d2cc3:/etc/memcached_server1.conf", "delta": "0:00:00.301770", "end": "2022-11-18 06:02:02.376362", "rc": 0, "start": "2022-11-18 06:02:02.074592", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 cp /etc/memcached.conf /etc/memcached_server2.conf", "delta": "0:00:00.188627", "end": "2022-11-18 06:02:06.298270", "rc": 0, "start": "2022-11-18 06:02:06.109643", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sed 's/11211/11212/' /etc/memcached_server2.conf", "delta": "0:00:00.186173", "end": "2022-11-18 06:02:10.180457", "rc": 0, "start": "2022-11-18 06:02:09.994284", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11212\n-p 11212\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11212", "-p 11212", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "84d193df9519e812168b88d00a4855e0e93f6f47", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "22220440373bdf924b01a710c1fec915", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668772930.32-15513-131646555970738/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 2303271d2cc3:/etc/memcached_server2.conf", "delta": "0:00:00.294133", "end": "2022-11-18 06:02:11.645089", "rc": 0, "start": "2022-11-18 06:02:11.350956", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 cp /etc/memcached.conf /etc/memcached_server3.conf", "delta": "0:00:00.174109", "end": "2022-11-18 06:02:16.566811", "rc": 0, "start": "2022-11-18 06:02:16.392702", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sed 's/11211/11213/' /etc/memcached_server3.conf", "delta": "0:00:00.178935", "end": "2022-11-18 06:02:19.523762", "rc": 0, "start": "2022-11-18 06:02:19.344827", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11213\n-p 11213\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11213", "-p 11213", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "b06265e21a592b656d967ed56cd7251bdbd95c26", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "109b9c99f7a393a4fe480e9be9fcb6dc", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668772939.66-15571-101103517565170/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 2303271d2cc3:/etc/memcached_server3.conf", "delta": "0:00:00.313023", "end": "2022-11-18 06:02:21.024396", "rc": 0, "start": "2022-11-18 06:02:20.711373", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 cp /etc/memcached.conf /etc/memcached_server4.conf", "delta": "0:00:00.194612", "end": "2022-11-18 06:02:24.943915", "rc": 0, "start": "2022-11-18 06:02:24.749303", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sed 's/11211/11214/' /etc/memcached_server4.conf", "delta": "0:00:00.183158", "end": "2022-11-18 06:02:27.858464", "rc": 0, "start": "2022-11-18 06:02:27.675306", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11214\n-p 11214\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11214", "-p 11214", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "3cebb9e478da18dbf6d5abf344a1227502de9199", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "d99685d582bbf110ad2a4aa98e905c01", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668772947.99-15630-156107999736654/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 2303271d2cc3:/etc/memcached_server4.conf", "delta": "0:00:00.313573", "end": "2022-11-18 06:02:29.360179", "rc": 0, "start": "2022-11-18 06:02:29.046606", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 rm /lib/systemd/system/memcached.service", "delta": "0:00:00.189634", "end": "2022-11-18 06:02:32.254874", "rc": 0, "start": "2022-11-18 06:02:32.065240", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 rm /etc/memcached.conf", "delta": "0:00:00.196436", "end": "2022-11-18 06:02:35.113452", "rc": 0, "start": "2022-11-18 06:02:34.917016", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Restart Memcached Service] ***********************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 service memcached restart", "delta": "0:00:04.371010", "end": "2022-11-18 06:02:43.182960", "rc": 0, "start": "2022-11-18 06:02:38.811950", "stderr": "", "stderr_lines": [], "stdout": "Restarting memcached: memcached_server1.\nRestarting memcached: memcached_server2.\nRestarting memcached: memcached_server3.\nRestarting memcached: memcached_server4.", "stdout_lines": ["Restarting memcached: memcached_server1.", "Restarting memcached: memcached_server2.", "Restarting memcached: memcached_server3.", "Restarting memcached: memcached_server4."]}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "981763562947.14134", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/981763562947.14134", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "392983657691.14307", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/392983657691.14307", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "694735313034.14481", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/694735313034.14481", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "246766977698.14703", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/246766977698.14703", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt 2303271d2cc3:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.306634", "end": "2022-11-18 06:03:08.884357", "rc": 0, "start": "2022-11-18 06:03:08.577723", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "914938677886.15090", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/914938677886.15090", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sudo pkill -f lookup_server", "delta": "0:00:00.220229", "end": "2022-11-18 06:12:32.154152", "rc": 0, "start": "2022-11-18 06:12:31.933923", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 2303271d2cc3 sudo pkill -f mid_tier_server", "delta": "0:00:00.198691", "end": "2022-11-18 06:12:34.878370", "rc": 0, "start": "2022-11-18 06:12:34.679679", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc 2303271d2cc3:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.303591", "end": "2022-11-18 06:12:37.820391", "rc": 0, "start": "2022-11-18 06:12:37.516800", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service 2303271d2cc3 make", "delta": "0:00:00.229601", "end": "2022-11-18 06:12:41.750882", "rc": 0, "start": "2022-11-18 06:12:41.521281", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc 2303271d2cc3:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.292944", "end": "2022-11-18 06:12:44.761635", "rc": 0, "start": "2022-11-18 06:12:44.468691", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator 2303271d2cc3 make", "delta": "0:00:00.225500", "end": "2022-11-18 06:12:48.671327", "rc": 0, "start": "2022-11-18 06:12:48.445827", "stderr": "", "stderr_lines": [], "stdout": "make: Nothing to be done for 'all'.", "stdout_lines": ["make: Nothing to be done for 'all'."]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "77343708298.16634", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/77343708298.16634", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "208148459785.16830", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/208148459785.16830", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "296245307007.17007", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/296245307007.17007", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "436323009764.17179", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/436323009764.17179", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt 2303271d2cc3:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.333861", "end": "2022-11-18 06:13:11.296316", "rc": 0, "start": "2022-11-18 06:13:10.962455", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "412739920930.17557", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/412739920930.17557", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run remote profiler] *****************************************************
changed: [node1] => {"ansible_job_id": "848263184477.17746", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/848263184477.17746", "started": 1}

PLAY [Kill remote profiler] ****************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

INFO:root:python3 ./profiler.py -n node1 start
Connection to node1 closed.
INFO:root:python3 ./profiler.py -n node1 stop
INFO:root:python3 ./profiler.py -n node1 report -d /users/ganton12/data/delete/turbo=False-kernelconfig=baseline-hyperthreading=False-qps=1-0/router
ansible-playbook -v -i hosts -e ""  ansible/install.yml
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "" --tags "kill_profiler" ansible/profiler.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3" --tags "kill_memcached" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MEM_CONF_NAME=memcached_server1.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 PORT_NUMBER=11211 MEM_CONF_NAME=memcached_server1.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MEM_CONF_NAME=memcached_server2.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 PORT_NUMBER=11212 MEM_CONF_NAME=memcached_server2.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MEM_CONF_NAME=memcached_server3.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 PORT_NUMBER=11213 MEM_CONF_NAME=memcached_server3.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MEM_CONF_NAME=memcached_server4.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 PORT_NUMBER=11214 MEM_CONF_NAME=memcached_server4.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MEM_CONF_NAME=/lib/systemd/system/memcached.service" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MEM_CONF_NAME=/etc/memcached.conf" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3" --tags "restart_mem" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=4 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=4 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=4 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=4 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=4 RESPONSE_THREADS=4 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_run.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=1 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=1 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=1 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=1 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=2303271d2cc3 BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=1 RESPONSE_THREADS=1 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "ITERATION=0" --tags "run_profiler" ansible/profiler.yml
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Install Router] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Install Router if not exists] ********************************************
ok: [node1] => {"changed": false, "dest": "/users/ganton12/", "gid": 7009, "group": "ramp-PG0", "handler": "TgzArchive", "mode": "0755", "owner": "ganton12", "size": 4096, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668777710.01-16784-257975405362701/source", "state": "directory", "uid": 20001}

TASK [Set Up Docker Curl] ******************************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/set-up-docker.sh"], "delta": "0:00:49.986722", "end": "2022-11-18 07:22:41.749491", "rc": 0, "start": "2022-11-18 07:21:51.762769", "stderr": "Warning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\n\nYou may press Ctrl+C now to abort this script.\n+ sleep 20\nWarning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\n\nYou may press Ctrl+C now to abort this script.\n+ sleep 20\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\n+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings\n+ sh -c curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg\ngpg: WARNING: unsafe ownership on homedir '/users/ganton12/.gnupg'\n+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg\n+ sh -c echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null\n+ version_gte 20.10\n+ [ -z  ]\n+ return 0\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null\n+ sh -c docker version", "stderr_lines": ["Warning: the \"docker\" command appears to already exist on this system.", "", "If you already have Docker installed, this script can cause trouble, which is", "why we're displaying this warning and provide the opportunity to cancel the", "installation.", "", "If you installed the current Docker package using this script and are using it", "again to update Docker, you can safely ignore this message.", "", "You may press Ctrl+C now to abort this script.", "+ sleep 20", "Warning: the \"docker\" command appears to already exist on this system.", "", "If you already have Docker installed, this script can cause trouble, which is", "why we're displaying this warning and provide the opportunity to cancel the", "installation.", "", "If you installed the current Docker package using this script and are using it", "again to update Docker, you can safely ignore this message.", "", "You may press Ctrl+C now to abort this script.", "+ sleep 20", "+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null", "+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings", "+ sh -c curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg", "gpg: WARNING: unsafe ownership on homedir '/users/ganton12/.gnupg'", "+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg", "+ sh -c echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list", "+ sh -c apt-get update -qq >/dev/null", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null", "+ version_gte 20.10", "+ [ -z  ]", "+ return 0", "+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null", "+ sh -c docker version"], "stdout": "# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f\napt-get update -qq >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\nmkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings\ncurl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg\nchmod a+r /etc/apt/keyrings/docker.gpg\necho \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list\napt-get update -qq >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null\nDEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null\n# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f\nClient: Docker Engine - Community\n Version:           20.10.21\n API version:       1.41\n Go version:        go1.18.7\n Git commit:        baeda1f\n Built:             Tue Oct 25 18:02:00 2022\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\n\nServer: Docker Engine - Community\n Engine:\n  Version:          20.10.21\n  API version:      1.41 (minimum version 1.12)\n  Go version:       go1.18.7\n  Git commit:       3056208\n  Built:            Tue Oct 25 17:59:53 2022\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.6.10\n  GitCommit:        770bd0108c32f3fb5c73ae1264f7e503fe7b2661\n runc:\n  Version:          1.1.4\n  GitCommit:        v1.1.4-0-g5fd4c4d\n docker-init:\n  Version:          0.19.0\n  GitCommit:        de40ad0\n\n================================================================================\n\nTo run Docker as a non-privileged user, consider setting up the\nDocker daemon in rootless mode for your user:\n\n    dockerd-rootless-setuptool.sh install\n\nVisit https://docs.docker.com/go/rootless/ to learn about rootless mode.\n\n\nTo run the Docker daemon as a fully privileged service, but granting non-root\nusers access, refer to https://docs.docker.com/go/daemon-access/\n\nWARNING: Access to the remote API on a privileged Docker daemon is equivalent\n         to root access on the host. Refer to the 'Docker daemon attack surface'\n         documentation for details: https://docs.docker.com/go/attack-surface/\n\n================================================================================", "stdout_lines": ["# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f", "apt-get update -qq >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null", "mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings", "curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg", "chmod a+r /etc/apt/keyrings/docker.gpg", "echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic stable\" > /etc/apt/sources.list.d/docker.list", "apt-get update -qq >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin >/dev/null", "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null", "# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f", "Client: Docker Engine - Community", " Version:           20.10.21", " API version:       1.41", " Go version:        go1.18.7", " Git commit:        baeda1f", " Built:             Tue Oct 25 18:02:00 2022", " OS/Arch:           linux/amd64", " Context:           default", " Experimental:      true", "", "Server: Docker Engine - Community", " Engine:", "  Version:          20.10.21", "  API version:      1.41 (minimum version 1.12)", "  Go version:       go1.18.7", "  Git commit:       3056208", "  Built:            Tue Oct 25 17:59:53 2022", "  OS/Arch:          linux/amd64", "  Experimental:     false", " containerd:", "  Version:          1.6.10", "  GitCommit:        770bd0108c32f3fb5c73ae1264f7e503fe7b2661", " runc:", "  Version:          1.1.4", "  GitCommit:        v1.1.4-0-g5fd4c4d", " docker-init:", "  Version:          0.19.0", "  GitCommit:        de40ad0", "", "================================================================================", "", "To run Docker as a non-privileged user, consider setting up the", "Docker daemon in rootless mode for your user:", "", "    dockerd-rootless-setuptool.sh install", "", "Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.", "", "", "To run the Docker daemon as a fully privileged service, but granting non-root", "users access, refer to https://docs.docker.com/go/daemon-access/", "", "WARNING: Access to the remote API on a privileged Docker daemon is equivalent", "         to root access on the host. Refer to the 'Docker daemon attack surface'", "         documentation for details: https://docs.docker.com/go/attack-surface/", "", "================================================================================"]}

TASK [Make Space to Commit Image] **********************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/change-storage-location-docker.sh"], "delta": "0:00:05.183281", "end": "2022-11-18 07:22:47.187009", "rc": 0, "start": "2022-11-18 07:22:42.003728", "stderr": "Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1\": dial unix /var/run/docker.sock: connect: permission denied\n\"docker rm\" requires at least 1 argument.\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json\": dial unix /var/run/docker.sock: connect: permission denied\n\"docker rmi\" requires at least 1 argument.\nSee 'docker rmi --help'.\n\nUsage:  docker rmi [OPTIONS] IMAGE [IMAGE...]\n\nRemove one or more images\nWarning: Stopping docker.service, but it can still be activated by:\n  docker.socket\numount: /var/lib/docker: umount failed: Operation not permitted.\nrm: cannot remove '/var/lib/docker': Device or resource busy\nmkdir: cannot create directory ‘/var/lib/docker’: File exists\nmkdir: cannot create directory ‘/dev/mkdocker’: File exists", "stderr_lines": ["Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1\": dial unix /var/run/docker.sock: connect: permission denied", "\"docker rm\" requires at least 1 argument.", "See 'docker rm --help'.", "", "Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]", "", "Remove one or more containers", "Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/json\": dial unix /var/run/docker.sock: connect: permission denied", "\"docker rmi\" requires at least 1 argument.", "See 'docker rmi --help'.", "", "Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]", "", "Remove one or more images", "Warning: Stopping docker.service, but it can still be activated by:", "  docker.socket", "umount: /var/lib/docker: umount failed: Operation not permitted.", "rm: cannot remove '/var/lib/docker': Device or resource busy", "mkdir: cannot create directory ‘/var/lib/docker’: File exists", "mkdir: cannot create directory ‘/dev/mkdocker’: File exists"], "stdout": "", "stdout_lines": []}

PLAY [Execute Router Container] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Change to docker group] **************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": ["sudo", "newgrp", "docker"], "delta": "0:00:00.027185", "end": "2022-11-18 07:22:48.802393", "rc": 0, "start": "2022-11-18 07:22:48.775208", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Compose Up Router] *******************************************************
changed: [node1] => {"changed": true, "cmd": ["~/Router/scripts/docker-compose-up.sh"], "delta": "0:10:01.204933", "end": "2022-11-18 07:32:50.250123", "rc": 0, "start": "2022-11-18 07:22:49.045190", "stderr": "", "stderr_lines": [], "stdout": "25d70fd577e4   mklean/baseline-microsuite:hdsearch_router   \"bash\"    18 seconds ago   Up 15 seconds   0.0.0.0:11211-11214->11211-11214/tcp, :::11211-11214->11211-11214/tcp, 0.0.0.0:50050-50055->50050-50055/tcp, :::50050-50055->50050-50055/tcp, 50056-50070/tcp   microsuite-hdsearch-1", "stdout_lines": ["25d70fd577e4   mklean/baseline-microsuite:hdsearch_router   \"bash\"    18 seconds ago   Up 15 seconds   0.0.0.0:11211-11214->11211-11214/tcp, :::11211-11214->11211-11214/tcp, 0.0.0.0:50050-50055->50050-50055/tcp, :::50050-50055->50050-50055/tcp, 50056-50070/tcp   microsuite-hdsearch-1"]}

PLAY RECAP *********************************************************************
node1                      : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Set uncore frequency] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Load msr kernel module] **************************************************
changed: [node1] => {"changed": true, "cmd": "modprobe msr", "delta": "0:00:00.008011", "end": "2022-11-18 07:33:04.055201", "rc": 0, "start": "2022-11-18 07:33:04.047190", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Set uncore freq] *********************************************************
changed: [node1] => {"changed": true, "cmd": "wrmsr -p0 0x620 0x1414", "delta": "0:00:00.006782", "end": "2022-11-18 07:33:04.352502", "rc": 0, "start": "2022-11-18 07:33:04.345720", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Run remote profiler] *****************************************************

PLAY [Kill remote profiler] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Get the PID of running process] ******************************************
changed: [node1] => {"changed": true, "cmd": "ps -few | grep profiler | awk '{print $2}'", "delta": "0:00:00.042689", "end": "2022-11-18 07:33:13.066330", "rc": 0, "start": "2022-11-18 07:33:13.023641", "stderr": "", "stderr_lines": [], "stdout": "17753\n17754\n22666\n22668", "stdout_lines": ["17753", "17754", "22666", "22668"]}

TASK [Kill remote profiler] ****************************************************
changed: [node1] => (item=17753) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 17753", "delta": "0:00:00.022766", "end": "2022-11-18 07:33:13.358958", "item": "17753", "rc": 0, "start": "2022-11-18 07:33:13.336192", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": [], "warnings": ["Consider using 'become', 'become_method', and 'become_user' rather than running sudo"]}
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
failed: [node1] (item=17754) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 17754", "delta": "0:00:00.022464", "end": "2022-11-18 07:33:13.550179", "item": "17754", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 07:33:13.527715", "stderr": "kill: (17754): No such process", "stderr_lines": ["kill: (17754): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=22666) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 22666", "delta": "0:00:00.022738", "end": "2022-11-18 07:33:13.741196", "item": "22666", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 07:33:13.718458", "stderr": "kill: (22666): No such process", "stderr_lines": ["kill: (22666): No such process"], "stdout": "", "stdout_lines": []}
failed: [node1] (item=22668) => {"ansible_loop_var": "item", "changed": true, "cmd": "sudo kill 22668", "delta": "0:00:00.022474", "end": "2022-11-18 07:33:13.923693", "item": "22668", "msg": "non-zero return code", "rc": 1, "start": "2022-11-18 07:33:13.901219", "stderr": "kill: (22668): No such process", "stderr_lines": ["kill: (22668): No such process"], "stdout": "", "stdout_lines": []}
...ignoring

PLAY RECAP *********************************************************************
node1                      : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill memcached] **********************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sudo pkill -f memcached", "delta": "0:00:00.198644", "end": "2022-11-18 07:33:23.799131", "rc": 0, "start": "2022-11-18 07:33:23.600487", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sudo pkill -f lookup_server", "delta": "0:00:00.185714", "end": "2022-11-18 07:33:32.661582", "rc": 0, "start": "2022-11-18 07:33:32.475868", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sudo pkill -f mid_tier_server", "delta": "0:00:00.180768", "end": "2022-11-18 07:33:34.399448", "rc": 0, "start": "2022-11-18 07:33:34.218680", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc 25d70fd577e4:/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server.cc", "delta": "0:00:00.320278", "end": "2022-11-18 07:33:37.456553", "rc": 0, "start": "2022-11-18 07:33:37.136275", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Midtier] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/mid_tier_service/service 25d70fd577e4 make", "delta": "0:00:06.169952", "end": "2022-11-18 07:33:47.383131", "rc": 0, "start": "2022-11-18 07:33:41.213179", "stderr": "", "stderr_lines": [], "stdout": "g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc\ng++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread", "stdout_lines": ["g++ -std=c++14 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../../ -I/usr/local/include -pthread -O3 -I../../ -Wall -fopenmp -I../../  -c -o mid_tier_server.o mid_tier_server.cc", "g++ ../../protoc_files//lookup.pb.o ../../protoc_files//lookup.grpc.pb.o ../../protoc_files//router.pb.o ../../protoc_files//router.grpc.pb.o ../../mid_tier_service/src/spookyhash.o ../../lookup_service/service/helper_files/client_helper.o helper_files/router_server_helper.o helper_files/timing.o helper_files/utils.o mid_tier_server.o -O3 -o mid_tier_server -L/usr/local/lib -lgrpc++ -lgrpc -lgpr -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../../ -lboost_system -lboost_thread"]}

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc 25d70fd577e4:/MicroSuite/src/Router/load_generator/load_generator_open_loop.cc", "delta": "0:00:00.331751", "end": "2022-11-18 07:33:50.484636", "rc": 0, "start": "2022-11-18 07:33:50.152885", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Make Client] *************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec -w /MicroSuite/src/Router/load_generator 25d70fd577e4 make", "delta": "0:00:04.293939", "end": "2022-11-18 07:33:57.608970", "rc": 0, "start": "2022-11-18 07:33:53.315031", "stderr": "", "stderr_lines": [], "stdout": "g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o load_generator_open_loop.o load_generator_open_loop.cc\ng++ ../protoc_files/router.pb.o ../protoc_files/router.grpc.pb.o helper_files/loadgen_router_client_helper.o ../mid_tier_service/service/helper_files/timing.o ../mid_tier_service/service/helper_files/utils.o load_generator_open_loop.o -O3 -o load_generator_open_loop -L/usr/local/lib `pkg-config --libs grpc++ grpc` -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../", "stdout_lines": ["g++ -std=c++11 -O3 -mavx2 -mavx -fopenmp  -DMKL_ILP64 -m64 -I/opt/intel/mkl/include -I../ -I/usr/local/include -pthread -O3 -I../ -g -Wall -fopenmp -I../  -c -o load_generator_open_loop.o load_generator_open_loop.cc", "g++ ../protoc_files/router.pb.o ../protoc_files/router.grpc.pb.o helper_files/loadgen_router_client_helper.o ../mid_tier_service/service/helper_files/timing.o ../mid_tier_service/service/helper_files/utils.o load_generator_open_loop.o -O3 -o load_generator_open_loop -L/usr/local/lib `pkg-config --libs grpc++ grpc` -lprotobuf -lpthread -I /usr/local/include -lflann -fopenmp -L/usr/lib64 -lstdc++ -lssl -lcrypto -fopenmp -Wl,--start-group /opt/intel/mkl/lib/intel64/libmkl_intel_ilp64.a /opt/intel/mkl/lib/intel64/libmkl_gnu_thread.a /opt/intel/mkl/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl -I../"]}

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 cp /etc/memcached.conf /etc/memcached_server1.conf", "delta": "0:00:00.188977", "end": "2022-11-18 07:34:00.519942", "rc": 0, "start": "2022-11-18 07:34:00.330965", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sed 's/11211/11211/' /etc/memcached_server1.conf", "delta": "0:00:00.206817", "end": "2022-11-18 07:34:03.416405", "rc": 0, "start": "2022-11-18 07:34:03.209588", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11211", "-p 11211", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "81a7b227586982a5dda329ef346869f53a37cb85", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "f09e183ccac0b55d1cb71cb83b6b0eb9", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668778443.56-17101-126156399323938/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 25d70fd577e4:/etc/memcached_server1.conf", "delta": "0:00:00.314430", "end": "2022-11-18 07:34:04.944480", "rc": 0, "start": "2022-11-18 07:34:04.630050", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 cp /etc/memcached.conf /etc/memcached_server2.conf", "delta": "0:00:00.186094", "end": "2022-11-18 07:34:07.906616", "rc": 0, "start": "2022-11-18 07:34:07.720522", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sed 's/11211/11212/' /etc/memcached_server2.conf", "delta": "0:00:00.192225", "end": "2022-11-18 07:34:11.879421", "rc": 0, "start": "2022-11-18 07:34:11.687196", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11212\n-p 11212\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11212", "-p 11212", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "84d193df9519e812168b88d00a4855e0e93f6f47", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "22220440373bdf924b01a710c1fec915", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668778452.03-17159-45332803087797/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 25d70fd577e4:/etc/memcached_server2.conf", "delta": "0:00:00.350839", "end": "2022-11-18 07:34:13.444475", "rc": 0, "start": "2022-11-18 07:34:13.093636", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 cp /etc/memcached.conf /etc/memcached_server3.conf", "delta": "0:00:00.202865", "end": "2022-11-18 07:34:16.315844", "rc": 0, "start": "2022-11-18 07:34:16.112979", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sed 's/11211/11213/' /etc/memcached_server3.conf", "delta": "0:00:00.191092", "end": "2022-11-18 07:34:19.216580", "rc": 0, "start": "2022-11-18 07:34:19.025488", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11213\n-p 11213\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11213", "-p 11213", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "b06265e21a592b656d967ed56cd7251bdbd95c26", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "109b9c99f7a393a4fe480e9be9fcb6dc", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668778459.36-17217-14405175538410/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 25d70fd577e4:/etc/memcached_server3.conf", "delta": "0:00:00.329269", "end": "2022-11-18 07:34:20.744693", "rc": 0, "start": "2022-11-18 07:34:20.415424", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Create Memcached Configuration] ******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 cp /etc/memcached.conf /etc/memcached_server4.conf", "delta": "0:00:00.175548", "end": "2022-11-18 07:34:23.674971", "rc": 0, "start": "2022-11-18 07:34:23.499423", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Set Memcached Port] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sed 's/11211/11214/' /etc/memcached_server4.conf", "delta": "0:00:00.186981", "end": "2022-11-18 07:34:26.622012", "rc": 0, "start": "2022-11-18 07:34:26.435031", "stderr": "", "stderr_lines": [], "stdout": "# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m 64\n\n# Default connection port is 11214\n-p 11214\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n\n# Use a pidfile\n-P /var/run/memcached/memcached.pid", "stdout_lines": ["# memcached default config file", "# 2003 - Jay Bonci <jaybonci@debian.org>", "# This configuration file is read by the start-memcached script provided as", "# part of the Debian GNU/Linux distribution.", "", "# Run memcached as a daemon. This command is implied, and is not needed for the", "# daemon to run. See the README.Debian that comes with this package for more", "# information.", "-d", "", "# Log memcached's output to /var/log/memcached", "logfile /var/log/memcached.log", "", "# Be verbose", "# -v", "", "# Be even more verbose (print client commands as well)", "# -vv", "", "# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default", "# Note that the daemon will grow to this size, but does not start out holding this much", "# memory", "-m 64", "", "# Default connection port is 11214", "-p 11214", "", "# Run the daemon as root. The start-memcached will default to running as root if no", "# -u command is present in this config file", "-u memcache", "", "# Specify which IP address to listen on. The default is to listen on all IP addresses", "# This parameter is one of the only security measures that memcached has, so make sure", "# it's listening on a firewalled interface.", "-l 127.0.0.1", "", "# Limit the number of simultaneous incoming connections. The daemon default is 1024", "# -c 1024", "", "# Lock down all paged memory. Consult with the README and homepage before you do this", "# -k", "", "# Return error when memory is exhausted (rather than removing items)", "# -M", "", "# Maximize core file limit", "# -r", "", "# Use a pidfile", "-P /var/run/memcached/memcached.pid"]}

TASK [Save conf to a file] *****************************************************
changed: [node1] => {"changed": true, "checksum": "3cebb9e478da18dbf6d5abf344a1227502de9199", "dest": "/users/ganton12/temp.txt", "gid": 7009, "group": "ramp-PG0", "md5sum": "d99685d582bbf110ad2a4aa98e905c01", "mode": "0644", "owner": "ganton12", "size": 1479, "src": "/users/ganton12/.ansible/tmp/ansible-tmp-1668778466.76-17275-152744575370161/source", "state": "file", "uid": 20001}

TASK [Save conf to image] ******************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker cp ~/temp.txt 25d70fd577e4:/etc/memcached_server4.conf", "delta": "0:00:00.302059", "end": "2022-11-18 07:34:28.124768", "rc": 0, "start": "2022-11-18 07:34:27.822709", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 rm /lib/systemd/system/memcached.service", "delta": "0:00:00.177386", "end": "2022-11-18 07:34:32.073909", "rc": 0, "start": "2022-11-18 07:34:31.896523", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Remove Memcached Service Conf] *******************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 rm /etc/memcached.conf", "delta": "0:00:00.204824", "end": "2022-11-18 07:34:35.077275", "rc": 0, "start": "2022-11-18 07:34:34.872451", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Restart Memcached Service] ***********************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file

PLAY [Kill Memcached] **********************************************************

PLAY [Create Memcached Configuration] ******************************************

PLAY [Set Memcached Port] ******************************************************

PLAY [Remove Memcached Service Conf] *******************************************

PLAY [Restart Memcached Service] ***********************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Restart Memcached Service] ***********************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 service memcached restart", "delta": "0:00:04.376873", "end": "2022-11-18 07:34:43.221733", "rc": 0, "start": "2022-11-18 07:34:38.844860", "stderr": "", "stderr_lines": [], "stdout": "Restarting memcached: memcached_server1.\nRestarting memcached: memcached_server2.\nRestarting memcached: memcached_server3.\nRestarting memcached: memcached_server4.", "stdout_lines": ["Restarting memcached: memcached_server1.", "Restarting memcached: memcached_server2.", "Restarting memcached: memcached_server3.", "Restarting memcached: memcached_server4."]}

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "25151390127.26315", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/25151390127.26315", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "238498219731.26493", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/238498219731.26493", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "508380183302.26670", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/508380183302.26670", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run bucket server] *******************************************************
changed: [node1] => {"ansible_job_id": "859206921973.26850", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/859206921973.26850", "started": 1}

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Copy IP file] ************************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker cp /users/ganton12/Router/microsuite/lookup_servers_IP.txt 25d70fd577e4:/MicroSuite/src/Router/mid_tier_service/service/lookup_servers_IP.txt", "delta": "0:00:00.305044", "end": "2022-11-18 07:35:08.336525", "rc": 0, "start": "2022-11-18 07:35:08.031481", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

PLAY [Run midtier] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Run midtier] *************************************************************
changed: [node1] => {"ansible_job_id": "294069798667.27244", "changed": true, "finished": 0, "results_file": "/users/ganton12/.ansible_async/294069798667.27244", "started": 1}

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Connection to node1 closed.
Connection to node1 closed.
Using /users/ganton12/Router/ansible.cfg as config file
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 39, column 3, found a duplicate
dict key (tasks). Using last defined value only.
[WARNING]: While constructing a mapping from
/users/ganton12/Router/ansible/router.yml, line 61, column 3, found a duplicate
dict key (tasks). Using last defined value only.

PLAY [Kill bucket server] ******************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill bucket server] ******************************************************
[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
than running sudo
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sudo pkill -f lookup_server", "delta": "0:00:00.225175", "end": "2022-11-18 07:44:30.642331", "rc": 0, "start": "2022-11-18 07:44:30.417156", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run bucket server] *******************************************************

PLAY [Copy IP file] ************************************************************

PLAY [Copy Midtier] ************************************************************

PLAY [Compile Midtier] *********************************************************

PLAY [Copy Client] *************************************************************

PLAY [Compile Client] **********************************************************

PLAY [Kill midtier] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [node1]

TASK [Kill midtier] ************************************************************
changed: [node1] => {"changed": true, "cmd": "sudo docker exec 25d70fd577e4 sudo pkill -f mid_tier_server", "delta": "0:00:00.197553", "end": "2022-11-18 07:44:32.435674", "rc": 0, "start": "2022-11-18 07:44:32.238121", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [Run midtier] *************************************************************

PLAY [Get dataset] *************************************************************

PLAY RECAP *********************************************************************
node1                      : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

ansible-playbook -v -i hosts -e ""  ansible/install.yml
ansible-playbook -v -i hosts -e "MSR_VALUE=0x1414"  ansible/configure.yml
ansible-playbook -v -i hosts -e "" --tags "kill_profiler" ansible/profiler.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4" --tags "kill_memcached" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4" --tags "kill_midtier,kill_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MIDTIER_FILE_PATH=/users/ganton12/Router/microsuite/MicroSuite/src/Router/mid_tier_service/service/mid_tier_server_warmup.cc" --tags "copy_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MIDTIER_FILE_PATH=/MicroSuite/src/Router/mid_tier_service/service" --tags "compile_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 CLIENT_FILE_PATH=~/Router/microsuite/MicroSuite/src/Router/load_generator/load_generator_open_loop_warmup.cc" --tags "copy_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 CLIENT_FILE_PATH=/MicroSuite/src/Router/load_generator" --tags "compile_client" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MEM_CONF_NAME=memcached_server1.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 PORT_NUMBER=11211 MEM_CONF_NAME=memcached_server1.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MEM_CONF_NAME=memcached_server2.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 PORT_NUMBER=11212 MEM_CONF_NAME=memcached_server2.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MEM_CONF_NAME=memcached_server3.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 PORT_NUMBER=11213 MEM_CONF_NAME=memcached_server3.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MEM_CONF_NAME=memcached_server4.conf" --tags "add_mem_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 PORT_NUMBER=11214 MEM_CONF_NAME=memcached_server4.conf" --tags "set_mem_port" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MEM_CONF_NAME=/lib/systemd/system/memcached.service" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 MEM_CONF_NAME=/etc/memcached.conf" --tags "rm_mem_serv_conf" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4" --tags "restart_mem" ansible/memcached.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 IP=0.0.0.0 PORT=50050 MEMCACHED_PORT=11211 THREADS=4 ID=0 CORES=3" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 IP=0.0.0.0 PORT=50051 MEMCACHED_PORT=11212 THREADS=4 ID=1 CORES=4" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 IP=0.0.0.0 PORT=50052 MEMCACHED_PORT=11213 THREADS=4 ID=2 CORES=5" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 IP=0.0.0.0 PORT=50053 MEMCACHED_PORT=11214 THREADS=4 ID=3 CORES=6" --tags "run_bucket" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 IP_FILE_PATH=/users/ganton12/Router/microsuite/lookup_servers_IP.txt" --tags "copy_ip_file" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4 BUCKET_SERVERS=4 IP_FILE_PATH=lookup_servers_IP.txt IP=0.0.0.0 PORT=50054 NETWORK_THREADS=1 DISPATCH_THREADS=4 RESPONSE_THREADS=4 REPLICAS=3 CORES=2" --tags "run_midtier" ansible/router.yml
ansible-playbook -v -i hosts -e "CONTAINER_ID=25d70fd577e4" --tags "kill_midtier,kill_bucket" ansible/router.yml
